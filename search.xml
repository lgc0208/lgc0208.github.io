<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于 EasyX 库的大鱼吃小鱼游戏</title>
    <url>/2020/03/29/%E5%A4%A7%E9%B1%BC%E5%90%83%E5%B0%8F%E9%B1%BC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是进入大学本科之后完成的第一个比较完整的程序，通过EasyX库使用CPP实现一个大鱼吃小鱼的游戏。<br>&nbsp;<br><strong>工程文件下载：</strong> <a href="https://github.com/lgc0208/BigFishEatSmallFish">https://github.com/lgc0208/BigFishEatSmallFish</a><br>&nbsp;</p>
<span id="more"></span>

<h2 id="一-使用的库和IDE"><a href="#一-使用的库和IDE" class="headerlink" title="一.使用的库和IDE"></a>一.使用的库和IDE</h2><h4 id="EasyX库"><a href="#EasyX库" class="headerlink" title="EasyX库"></a>EasyX库</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EasyX 是针对 C++ 的图形库，可以帮助 C 语言初学者快速上手图形和游戏编程。</p>
<ol>
<li><p><strong>EasyX库地址</strong> ：<a href="https://easyx.cn/">https://easyx.cn/</a></p>
</li>
<li><p> <strong>使用版本</strong> 2018春分版；</p>
</li>
</ol>
<h5 id="IDE：Visual-Studio-2019"><a href="#IDE：Visual-Studio-2019" class="headerlink" title="IDE：Visual Studio 2019"></a>IDE：Visual Studio 2019</h5><h2 id="二-源代码"><a href="#二-源代码" class="headerlink" title="二.源代码"></a>二.源代码</h2><h3 id="1-Struct-h"><a href="#1-Struct-h" class="headerlink" title="1.Struct.h"></a>1.Struct.h</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Struct.h</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">player</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">int</span> y;</span><br><span class="line">	<span class="keyword">bool</span> live = <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">int</span> size = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> score = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">fish</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">int</span> y;</span><br><span class="line">	<span class="keyword">int</span> size;</span><br><span class="line">	<span class="keyword">bool</span> live = <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="2-Functions-h"><a href="#2-Functions-h" class="headerlink" title="2.Functions.h"></a>2.Functions.h</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Functions.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _Functions_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _Functions_H</span></span><br><span class="line">	</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;easyx.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span>                <span class="comment">//头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span>  comment(lib,<span class="meta-string">&quot;winmm.lib&quot;</span>)        <span class="comment">//引用静态库</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;Struct.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*************************************全局变量****************************************************/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">short</span> ScreenWidth = <span class="number">480</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">short</span> ScreenHeight = <span class="number">640</span>;</span><br><span class="line"><span class="keyword">short</span> ret = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> ToBig = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/**************NPC鱼的数量****************/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> numB = <span class="number">1</span>;<span class="comment">//大鱼数量</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> numL = <span class="number">2</span>;<span class="comment">//小鱼数量</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> numS = <span class="number">3</span>;<span class="comment">//虾米数量</span></span><br><span class="line">IMAGE Fish[<span class="number">3</span>];<span class="comment">//鱼的图片</span></span><br><span class="line">IMAGE lplayerfish[<span class="number">2</span>];<span class="comment">//玩家鱼的图片</span></span><br><span class="line">IMAGE rplayerfish[<span class="number">2</span>];<span class="comment">//玩家鱼的图片</span></span><br><span class="line">IMAGE background;<span class="comment">//背景</span></span><br><span class="line"><span class="keyword">short</span> Formerx = <span class="number">0</span>;<span class="comment">//用于转身</span></span><br><span class="line"><span class="keyword">short</span> Formery = <span class="number">0</span>;<span class="comment">//用于转身</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">50</span>;<span class="comment">//图片大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//加载图片</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">loadImages</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">loadimage</span>(&amp;Fish[<span class="number">2</span>], <span class="string">L&quot;bigfish.jpg&quot;</span>, <span class="number">2</span> * N, <span class="number">2</span> * N);</span><br><span class="line">	<span class="built_in">loadimage</span>(&amp;Fish[<span class="number">1</span>], <span class="string">L&quot;littlefish.jpg&quot;</span>, N, N);</span><br><span class="line">	<span class="built_in">loadimage</span>(&amp;Fish[<span class="number">0</span>], <span class="string">L&quot;shrimp.jpg&quot;</span>, N, N);</span><br><span class="line">	<span class="built_in">loadimage</span>(&amp;background, <span class="string">L&quot;background.jpg&quot;</span>, ScreenHeight, ScreenWidth);</span><br><span class="line">	<span class="built_in">loadimage</span>(&amp;lplayerfish[<span class="number">0</span>], <span class="string">L&quot;lplayerlittlefish.jpg&quot;</span>, N, N);</span><br><span class="line">	<span class="built_in">loadimage</span>(&amp;lplayerfish[<span class="number">1</span>], <span class="string">L&quot;lplayerbigfish.jpg&quot;</span>, <span class="number">2</span> * N, <span class="number">2</span> * N);</span><br><span class="line">	<span class="built_in">loadimage</span>(&amp;rplayerfish[<span class="number">0</span>], <span class="string">L&quot;rplayerlittlefish.jpg&quot;</span>, N, N);</span><br><span class="line">	<span class="built_in">loadimage</span>(&amp;rplayerfish[<span class="number">1</span>], <span class="string">L&quot;rplayerbigfish.jpg&quot;</span>, <span class="number">2</span> * N, <span class="number">2</span> * N);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//制作掩码图</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">changeImage</span><span class="params">(IMAGE imagePut, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">IMAGE <span class="title">image</span><span class="params">(N, N)</span></span>; <span class="comment">//存储掩码</span></span><br><span class="line">	DWORD* pmemflower = <span class="built_in">GetImageBuffer</span>(&amp;imagePut);</span><br><span class="line">	DWORD* image1 = <span class="built_in">GetImageBuffer</span>(&amp;image);</span><br><span class="line">	DWORD* fish1 = <span class="built_in">GetImageBuffer</span>(&amp;imagePut);</span><br><span class="line">	COLORREF backcolor = pmemflower[<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N * N; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (pmemflower[i] &gt;= backcolor)</span><br><span class="line">			image1[i] = WHITE;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			image1[i] = BLACK;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N * N; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (pmemflower[i] &gt;= backcolor)</span><br><span class="line">			fish1[i] = BLACK;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">putimage</span>(x, y, &amp;image, SRCAND);</span><br><span class="line">	<span class="built_in">putimage</span>(x, y, &amp;imagePut, SRCPAINT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//制作特定规格掩码图</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">changeImage2</span><span class="params">(IMAGE imagePut, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">IMAGE <span class="title">image</span><span class="params">(<span class="number">100</span>, <span class="number">100</span>)</span></span>; <span class="comment">//存储掩码</span></span><br><span class="line">	DWORD* pmemflower = <span class="built_in">GetImageBuffer</span>(&amp;imagePut);</span><br><span class="line">	DWORD* image1 = <span class="built_in">GetImageBuffer</span>(&amp;image);</span><br><span class="line">	DWORD* fish1 = <span class="built_in">GetImageBuffer</span>(&amp;imagePut);</span><br><span class="line">	COLORREF backcolor = pmemflower[<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span> * <span class="number">100</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (pmemflower[i] &gt;= backcolor)</span><br><span class="line">			image1[i] = WHITE;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			image1[i] = BLACK;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span> * <span class="number">100</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (pmemflower[i] &gt;= backcolor)</span><br><span class="line">			fish1[i] = BLACK;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">putimage</span>(x, y, &amp;image, SRCAND);</span><br><span class="line">	<span class="built_in">putimage</span>(x, y, &amp;imagePut, SRCPAINT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//玩家移动</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">(player* player2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">GetAsyncKeyState</span>(<span class="number">65</span>) &amp; <span class="number">0x8000</span>)  player2-&gt;x -= <span class="number">10</span>;	<span class="comment">// 左边</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">GetAsyncKeyState</span>(<span class="number">87</span>) &amp; <span class="number">0x8000</span>)  player2-&gt;y -= <span class="number">10</span>;	<span class="comment">// 上面</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">GetAsyncKeyState</span>(<span class="number">83</span>) &amp; <span class="number">0x8000</span>)  player2-&gt;y += <span class="number">10</span>;	<span class="comment">// 下面</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">GetAsyncKeyState</span>(<span class="number">68</span>) &amp; <span class="number">0x8000</span>)  player2-&gt;x += <span class="number">10</span>;	<span class="comment">// 右边</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//NPC移动</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">movefish</span><span class="params">(fish* fish1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	fish1-&gt;x += (<span class="built_in">rand</span>() % <span class="number">21</span>) - <span class="number">10</span>;</span><br><span class="line">	fish1-&gt;y += (<span class="built_in">rand</span>() &amp; <span class="number">21</span>) - <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//形态升级</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">biggerplayer</span><span class="params">(player* player2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (player2-&gt;score &gt; ToBig)</span><br><span class="line">		player2-&gt;size = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//NPC重生</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">reborn</span><span class="params">(fish* fish1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	fish1-&gt;x = <span class="built_in">rand</span>() % (ScreenHeight - <span class="number">50</span>);</span><br><span class="line">	fish1-&gt;y = <span class="built_in">rand</span>() % (ScreenWidth - <span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断玩家是否死亡</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">ifDead</span><span class="params">(fish* fish1, player* player2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (fish1-&gt;size &lt; player2-&gt;size)</span><br><span class="line">	&#123;</span><br><span class="line">		player2-&gt;score++;</span><br><span class="line">		<span class="built_in">biggerplayer</span>(player2);</span><br><span class="line">		<span class="built_in">reborn</span>(fish1);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (fish1-&gt;size &gt;= player2-&gt;size)</span><br><span class="line">	&#123;</span><br><span class="line">		player2-&gt;live = <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断玩家与NPC是否相遇</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">iftouch</span><span class="params">(fish* fish1, player* player2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (((<span class="built_in">abs</span>(fish1-&gt;x - player2-&gt;x) &lt; N)) &amp;&amp; (<span class="built_in">abs</span>(fish1-&gt;y - player2-&gt;y) &lt; N))<span class="comment">//距离小于N，则相遇</span></span><br><span class="line">		ifDead(fish1, player2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">iftouch2</span><span class="params">(fish* fish1, player* player2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (((<span class="built_in">abs</span>(fish1-&gt;x - player2-&gt;x) &lt; N)) &amp;&amp; (<span class="built_in">abs</span>(fish1-&gt;y - player2-&gt;y) &lt; N))<span class="comment">//距离小于N，则相遇</span></span><br><span class="line">	&#123;</span><br><span class="line">		player2-&gt;score++;</span><br><span class="line">		<span class="built_in">biggerplayer</span>(player2);</span><br><span class="line">		<span class="built_in">reborn</span>(fish1);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断鱼是否出界</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">out</span><span class="params">(fish* fish1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> ((fish1-&gt;x &lt; <span class="number">0</span>) || (fish1-&gt;x &gt; (ScreenHeight - <span class="number">50</span>)))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">reborn</span>(fish1);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> ((fish1-&gt;y &lt; <span class="number">0</span>) || (fish1-&gt;y &gt; (ScreenWidth - <span class="number">50</span>)))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">reborn</span>(fish1);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断玩家是否出界</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">playerout</span><span class="params">(player* player2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> ((player2-&gt;x &lt; <span class="number">0</span>) || (player2-&gt;x &gt; ScreenHeight - <span class="number">50</span>))</span><br><span class="line">		player2-&gt;live = <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">if</span> ((player2-&gt;y &lt; <span class="number">0</span>) || (player2-&gt;y &gt; ScreenWidth - <span class="number">50</span>))</span><br><span class="line">		player2-&gt;live = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印计分板</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">ScorePrint</span><span class="params">(player* player2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">setbkmode</span>(TRANSPARENT);	<span class="comment">//设置字体背景色为透明</span></span><br><span class="line">	<span class="built_in">settextcolor</span>(BLACK);		<span class="comment">//设置字体颜色为红色</span></span><br><span class="line">	TCHAR str[<span class="number">32</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	_stprintf_s(str, _T(<span class="string">&quot;击杀：%d&quot;</span>), player2-&gt;score);</span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">5</span>, <span class="number">5</span>, str);</span><br><span class="line">	_stprintf_s(str, _T(<span class="string">&quot;形态：%d&quot;</span>), player2-&gt;size);</span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">5</span>, <span class="number">25</span>, str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !_Functions_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-main-cpp"><a href="#3-main-cpp" class="headerlink" title="3.main.cpp"></a>3.main.cpp</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//main.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;Functions.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	player player1;</span><br><span class="line">	fish bigfish[numB];</span><br><span class="line">	fish littlefish[numL];</span><br><span class="line">	fish shrimp[numS];</span><br><span class="line">	<span class="built_in">srand</span>(<span class="built_in"><span class="keyword">unsigned</span></span>(<span class="built_in">time</span>(<span class="number">0</span>)));</span><br><span class="line">	<span class="comment">//玩家初始位置</span></span><br><span class="line">	player* player2 = &amp;player1;</span><br><span class="line">	player2-&gt;x = <span class="built_in">rand</span>() % (ScreenHeight - <span class="number">50</span>);</span><br><span class="line">	player2-&gt;y = <span class="built_in">rand</span>() % (ScreenWidth - <span class="number">50</span>);</span><br><span class="line">	<span class="comment">//鱼初始位置</span></span><br><span class="line">	fish* shrimp1[<span class="number">15</span>];<span class="comment">//shrimp指针数组</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numS; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		shrimp1[i] = &amp;shrimp[i];</span><br><span class="line">		shrimp1[i]-&gt;x = <span class="built_in">rand</span>() % (ScreenHeight - <span class="number">50</span>);</span><br><span class="line">		shrimp1[i]-&gt;y = <span class="built_in">rand</span>() % (ScreenWidth - <span class="number">50</span>);</span><br><span class="line">		shrimp1[i]-&gt;size = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	fish* littlefish1[numL];<span class="comment">//littlefish指针数组</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numL; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		littlefish1[i] = &amp;littlefish[i];</span><br><span class="line">		littlefish1[i]-&gt;x = <span class="built_in">rand</span>() % (ScreenHeight - <span class="number">50</span>);</span><br><span class="line">		littlefish1[i]-&gt;y = <span class="built_in">rand</span>() % (ScreenWidth - <span class="number">50</span>);</span><br><span class="line">		littlefish1[i]-&gt;size = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	fish* bigfish1[numB];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numB; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		bigfish1[i] = &amp;bigfish[i];</span><br><span class="line">		bigfish1[i]-&gt;x = <span class="built_in">rand</span>() % (ScreenHeight - <span class="number">50</span>);</span><br><span class="line">		bigfish1[i]-&gt;y = <span class="built_in">rand</span>() % (ScreenWidth - <span class="number">50</span>);</span><br><span class="line">		bigfish1[i]-&gt;size = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">loadImages</span>();<span class="comment">//加载图片</span></span><br><span class="line">	<span class="built_in">initgraph</span>(ScreenHeight, ScreenWidth);<span class="comment">//加载窗口界面</span></span><br><span class="line">	<span class="built_in">putimage</span>(<span class="number">0</span>, <span class="number">0</span>, &amp;background);<span class="comment">//放置窗口背景板</span></span><br><span class="line">	<span class="built_in">mciSendString</span>(<span class="string">L&quot;open  music.mp3 &quot;</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);<span class="comment">//将音乐文件放在与源文件同一目录下，alias  music的意思就是将这个音乐文件重新命名为music</span></span><br><span class="line">	<span class="built_in">mciSendString</span>(<span class="string">L&quot;play music.mp3 repeat&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);<span class="comment">//播放音乐，play意为播放，同样可换做pause:暂停，stop:停止，close:关闭，Resume:继续。Repeat意为重复播放。</span></span><br><span class="line">	<span class="comment">////mciSendstring(“stop music repeat”, NULL, NULL, NULL)；//暂停播放音乐。</span></span><br><span class="line">	<span class="built_in">setbkmode</span>(TRANSPARENT);	<span class="comment">//设置字体背景色为透明</span></span><br><span class="line">	<span class="built_in">settextcolor</span>(BLACK);		<span class="comment">//设置字体颜色为红色</span></span><br><span class="line">	<span class="comment">/*****************游戏规则*****************/</span></span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">290</span>, <span class="number">200</span>, <span class="string">L&quot;游戏规则:&quot;</span>);</span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">290</span>, <span class="number">230</span>, <span class="string">L&quot;玩家操作鱼吃比自己等级低的鱼&quot;</span>);</span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">290</span>, <span class="number">260</span>, <span class="string">L&quot;遇到比自己等级高或同等级的鱼即死亡&quot;</span>);</span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">290</span>, <span class="number">290</span>, <span class="string">L&quot;出界即死亡&quot;</span>);</span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">290</span>, <span class="number">320</span>, <span class="string">L&quot;按回车键开始&quot;</span>);</span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">290</span>, <span class="number">350</span>, <span class="string">L&quot;按P键暂停&quot;</span>);</span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">290</span>, <span class="number">380</span>, <span class="string">L&quot;按ESC键自毁&quot;</span>);</span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">290</span>, <span class="number">410</span>, <span class="string">L&quot;持续按C开启无敌模式&quot;</span>);</span><br><span class="line">	<span class="built_in">getchar</span>();<span class="comment">//使得开始界面静止，当用户按下Enter键时继续执行指令</span></span><br><span class="line">	<span class="comment">//char s[] = &quot;blacksheepwall&quot;;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//程序运行</span></span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">putimage</span>(<span class="number">0</span>, <span class="number">0</span>, &amp;background);<span class="comment">//放置游戏界面背景板</span></span><br><span class="line">		<span class="built_in">ScorePrint</span>(player2);<span class="comment">//打印计分板</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">//如果用户没有按C键，按此模式运行</span></span><br><span class="line">		<span class="keyword">if</span> (!(<span class="built_in">GetAsyncKeyState</span>(<span class="string">&#x27;C&#x27;</span>) &amp; <span class="number">0x8000</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//打印NPC-BOSS鱼</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numS; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">movefish</span>(shrimp1[i]);<span class="comment">//NPC移动函数</span></span><br><span class="line">				<span class="built_in">changeImage</span>(Fish[<span class="number">0</span>], shrimp1[i]-&gt;x, shrimp1[i]-&gt;y);<span class="comment">//制作掩码图</span></span><br><span class="line">				iftouch(shrimp1[i], player2);<span class="comment">//判断玩家与NPC是否相遇</span></span><br><span class="line">				<span class="built_in">out</span>(shrimp1[i]);<span class="comment">//判断鱼是否出界</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//打印NPC-小鱼</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numL; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">movefish</span>(littlefish1[i]);</span><br><span class="line">				<span class="built_in">changeImage</span>(Fish[<span class="number">1</span>], littlefish1[i]-&gt;x, littlefish1[i]-&gt;y);</span><br><span class="line">				iftouch(littlefish1[i], player2);</span><br><span class="line">				<span class="built_in">out</span>(littlefish1[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//打印NPC-大鱼</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numB; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">movefish</span>(bigfish1[i]);</span><br><span class="line">				<span class="built_in">changeImage2</span>(Fish[<span class="number">2</span>], bigfish1[i]-&gt;x, bigfish1[i]-&gt;y);</span><br><span class="line">				iftouch(bigfish1[i], player2);</span><br><span class="line">				<span class="built_in">out</span>(bigfish1[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//若用户按下C键，进入无敌模式</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">setbkmode</span>(TRANSPARENT);	<span class="comment">//设置字体背景色为透明</span></span><br><span class="line">			<span class="built_in">settextcolor</span>(BLACK);		<span class="comment">//设置字体颜色为红色</span></span><br><span class="line">			TCHAR str[<span class="number">32</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">			_stprintf_s(str, _T(<span class="string">&quot;已开始作弊模式&quot;</span>));<span class="comment">//提示操作者已进入无敌模式</span></span><br><span class="line">			<span class="built_in">outtextxy</span>(<span class="number">5</span>, <span class="number">45</span>, str);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numS; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">movefish</span>(shrimp1[i]);</span><br><span class="line">				<span class="built_in">changeImage</span>(Fish[<span class="number">0</span>], shrimp1[i]-&gt;x, shrimp1[i]-&gt;y);</span><br><span class="line">				iftouch2(shrimp1[i], player2);<span class="comment">//若接触，NPC必死</span></span><br><span class="line">				<span class="built_in">out</span>(shrimp1[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numL; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">movefish</span>(littlefish1[i]);</span><br><span class="line">				<span class="built_in">changeImage</span>(Fish[<span class="number">1</span>], littlefish1[i]-&gt;x, littlefish1[i]-&gt;y);</span><br><span class="line">				iftouch2(littlefish1[i], player2);<span class="comment">//若接触，NPC必死</span></span><br><span class="line">				<span class="built_in">out</span>(littlefish1[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numB; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">movefish</span>(bigfish1[i]);</span><br><span class="line">				<span class="built_in">changeImage2</span>(Fish[<span class="number">2</span>], bigfish1[i]-&gt;x, bigfish1[i]-&gt;y);</span><br><span class="line">				iftouch2(bigfish1[i], player2);<span class="comment">//若接触，NPC必死</span></span><br><span class="line">				<span class="built_in">out</span>(bigfish1[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//玩家的移动</span></span><br><span class="line">		<span class="built_in">move</span>(player2);</span><br><span class="line">		<span class="keyword">if</span> (Formerx &gt; player2-&gt;x)<span class="comment">//是否转弯</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (player2-&gt;size == <span class="number">1</span>)</span><br><span class="line">				<span class="built_in">changeImage</span>(lplayerfish[player2-&gt;size - <span class="number">1</span>], player2-&gt;x, player2-&gt;y);</span><br><span class="line">			<span class="keyword">else</span> <span class="built_in">changeImage2</span>(lplayerfish[player2-&gt;size - <span class="number">1</span>], player2-&gt;x, player2-&gt;y);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (player2-&gt;size == <span class="number">1</span>)</span><br><span class="line">				<span class="built_in">changeImage</span>(rplayerfish[player2-&gt;size - <span class="number">1</span>], player2-&gt;x, player2-&gt;y);</span><br><span class="line">			<span class="keyword">else</span> <span class="built_in">changeImage2</span>(rplayerfish[<span class="number">1</span>], player2-&gt;x, player2-&gt;y);</span><br><span class="line">		&#125;</span><br><span class="line">		Formerx = player2-&gt;x;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">playerout</span>(player2);</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">GetAsyncKeyState</span>(<span class="string">&#x27;P&#x27;</span>) &amp; <span class="number">0x8000</span>)<span class="comment">//若按下P，则暂停</span></span><br><span class="line">			ret = _getwch();</span><br><span class="line">		<span class="built_in">Sleep</span>(<span class="number">40</span>);<span class="comment">//帧率</span></span><br><span class="line">	&#125; <span class="keyword">while</span> (player2-&gt;live == <span class="literal">true</span> &amp;&amp; !(<span class="built_in">GetAsyncKeyState</span>(VK_ESCAPE) &amp; <span class="number">0x8000</span>));<span class="comment">//在没有按下ESC或者玩家未死亡时，持续执行</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//设置结束页面</span></span><br><span class="line">	<span class="built_in">putimage</span>(<span class="number">0</span>, <span class="number">0</span>, &amp;background);</span><br><span class="line">	<span class="built_in">setbkmode</span>(TRANSPARENT);	<span class="comment">//设置字体背景色为透明</span></span><br><span class="line">	<span class="built_in">settextcolor</span>(BLACK);		<span class="comment">//设置字体颜色为红色</span></span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">290</span>, <span class="number">290</span>, <span class="string">L&quot;游戏结束:&quot;</span>);</span><br><span class="line">	<span class="built_in">outtextxy</span>(<span class="number">290</span>, <span class="number">320</span>, <span class="string">L&quot;按任意键退出:&quot;</span>);</span><br><span class="line">	<span class="keyword">while</span> (_kbhit())<span class="comment">//键盘敲击，接受到任意键后退出</span></span><br><span class="line">		ret = _getwch();</span><br><span class="line">	ret = _getwch();</span><br><span class="line">	<span class="built_in">closegraph</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="三-后记"><a href="#三-后记" class="headerlink" title="三.后记"></a>三.后记</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当初写这个代码前前后后约摸花了一周半的时间，主要的难点在于刚接触完CPP的基础语法，就开始去编写这样一个对当时的我来说“十分不可思议”的“大程序”。包括要去学习一个新的库的用法，程序的组织……</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实一开始想去尝试使用类来编写这个程序，但是编写的过程中发现类的继承之类的知识都还没有掌握，==基础不牢，地动山摇==，所以就还是采用了面向过程的编程方式。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;总而言之，感觉最终的程序虽然做出来了，但是组织程序的过程还是挺凌乱的，有些“不知道怎么了就做出来了”的感觉。谨以此文留作纪念。</p>
]]></content>
      <categories>
        <category>项目</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>一个大三学生的个人博客</title>
    <url>/2022/01/28/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>欢迎来到我的博客！这里将记录我学习和生活的一些日常~</p>
<p>下面是我的一些基本信息</p>
<ul>
<li>北京邮电大学/信息与通信工程学院/本科生</li>
<li>邮箱：<a href="mailto:&#108;&#x67;&#99;&#48;&#x32;&#48;&#x38;&#64;&#x66;&#111;&#120;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;">&#108;&#x67;&#99;&#48;&#x32;&#48;&#x38;&#64;&#x66;&#111;&#120;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a></li>
<li>Github: <a href="https://github.com/lgc0208">https://github.com/lgc0208</a></li>
<li>CSDN：<a href="https://blog.csdn.net/weixin_45817309?spm=1000.2115.3001.5343">https://blog.csdn.net/weixin_45817309?spm=1000.2115.3001.5343</a></li>
</ul>
<p>您可以访问我的 <a href="https://github.com/lgc0208">GitHub</a> 主页进一步了解我在学业方面的一些成果</p>
]]></content>
  </entry>
  <entry>
    <title>基于 Verilog 和 EPM1270T144C5 的简易电子琴</title>
    <url>/2021/01/30/%E6%95%B0%E7%94%B5%E7%94%B5%E5%AD%90%E7%90%B4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本次实验使用硬件描述语言 Verilog HDL，针对以 Altera 公司的 MAX II 系列可编程器件 EPM1270T144C5 为核心芯片的可编程器件实验板设计实验简易电子演奏琴。</p>
<span id="more"></span>

<p>其基本功能如下：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（1）通过用 8×8 点阵显示“1 2 3 4 5 6 7”七个音符构成的电子琴键盘。其中点阵的第 一列用一个 LED 点亮表示音符“1”，第二列用二个 LED 点亮表示音符“2”，依此类推，如图 1 所示。当音符为低音 1~7 时，点阵显示为绿色；当音符为中音 1~7 时，点阵显示为红色； 当音符为高音 1~7 时，点阵显示为黄色。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（2）用 BTN7～BTN1 七个按键模拟电子琴手动演奏时的“1 2 3 4 5 6 7”七个音符。当 某个按键按下时，数码管 DISP7 显示相应的音符，点阵上与之对应的音符显示列全灭，同 时蜂鸣器演奏相应的声音；当按键放开时数码管显示的音符灭掉，点阵显示恢复，蜂鸣器停 止声音的输出。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（3）由拨码开关切换选择高、中、低音，点阵颜色进行相应变化。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（4）可通过拨码开关 SW0 进行手动/自动演奏的切换，自动演奏时，点阵根据乐曲进 行颜 色和亮灭的变化。 该实验设计过程中，将整个门铃分为 8 个模块：分频模块，演奏模块，点阵显示模块， 数码管显示模块。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后通过对程序的调试、相应部分功能的仿真以及在电路板的烧写，验证了整个系统的原理和本设计方案的正确性。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br><strong>完整工程文件：</strong> <a href="https://github.com/lgc0208/electronic_organ">https://github.com/lgc0208/electronic_organ</a><br>&nbsp;</p>
<h1 id="1-背景介绍"><a href="#1-背景介绍" class="headerlink" title="1 背景介绍"></a>1 背景介绍</h1><h2 id="1-1-相关知识"><a href="#1-1-相关知识" class="headerlink" title="1.1 相关知识"></a>1.1 相关知识</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;根据声乐知识，产生音乐的两个因素是音乐频率的持续时间，音乐的十二平均率规定， 每两个八音度之间的频率相差一倍，在两个八音度之间，又可分为 12 个半音。每两个半音 的频率比为 4。另外，音名 A（乐谱中的低音 6）的频率为 440HZ，音名 B 到 C 之间，E 到 F 之间为半音，其余为全音。由此可以计算出乐谱中从低音 1 到高音 1 之间每个音名的频率如表1所示</p>
<center><b>表1 简谱中音名与频率的关系<b></center>
<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130212340321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>

<h2 id="1-2-基本要求"><a href="#1-2-基本要求" class="headerlink" title="1.2 基本要求"></a>1.2 基本要求</h2><h3 id="1-2-1-点阵显示"><a href="#1-2-1-点阵显示" class="headerlink" title="1.2.1 点阵显示"></a>1.2.1 点阵显示</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用 8×8 点阵显示“1 2 3 4 5 6 7”七个音符构成的电子琴键盘。其中点阵的第一列用一个 LED 点亮表示音符“1”，第二列用二个 LED 点亮表示音符“2”，依此类推，如图 1 所示。当音符为低音 1<del>7 时，点阵显示为绿色；当音符为中音 1</del>7 时，点阵显示为红色；当音符为高音 1~7 时，点阵显示为黄色；如图1所示。</p>
<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130212904672.png"/>
</div>
<center><b>图 1 点阵显示<b></center>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h3 id="1-2-2-按键按下后的点阵显示"><a href="#1-2-2-按键按下后的点阵显示" class="headerlink" title="1.2.2 按键按下后的点阵显示"></a>1.2.2 按键按下后的点阵显示</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用 BTN7～BTN1 七个按键模拟电子琴手动演奏时的“1 2 3 4 5 6 7”七个音符。当 某个按键按下时，数码管 DISP7 显示相应的音符，点阵上与之对应的音符显示列全灭，同时蜂鸣器演奏相应的声音；当按键放开时数码管显示的音符灭掉，点阵显示恢复，蜂鸣器停止声音的输出。图 2 为演奏中音 3（BTN5 按下）时点阵的显示情况。</p>
<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130213308621.png"/>
</div>
<center><b>图 2 按键按下后的点阵显示<b></center>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h3 id="1-2-3-高中低音切换"><a href="#1-2-3-高中低音切换" class="headerlink" title="1.2.3 高中低音切换"></a>1.2.3 高中低音切换</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由拨码开关切换选择高、中、低音，点阵颜色进行相应变化。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h3 id="1-2-4-自动、手动演奏切换"><a href="#1-2-4-自动、手动演奏切换" class="headerlink" title="1.2.4 自动、手动演奏切换"></a>1.2.4 自动、手动演奏切换</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可通过一个拨码开关进行手动/自动演奏的切换，自动演奏时，点阵根据乐曲进行颜色和亮灭的变化。<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h1 id="2-Verilog-HDL语言介绍"><a href="#2-Verilog-HDL语言介绍" class="headerlink" title="2 Verilog HDL语言介绍"></a>2 Verilog HDL语言介绍</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Verilog HDL是硬件描述语言的一种，用于数字电子系统设计。它允许设计者用它来进行各种级别的逻辑设计，可以用它进行数字逻辑系统的仿真验证、时序分析、逻辑综合。它是目前应用最广泛的一种硬件描述语言之一。<br>&nbsp;</p>
<h1 id="3-系统设计"><a href="#3-系统设计" class="headerlink" title="3 系统设计"></a>3 系统设计</h1><h2 id="3-1-设计思路"><a href="#3-1-设计思路" class="headerlink" title="3.1 设计思路"></a>3.1 设计思路</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;针对本实验所需要实现的基本要求，笔者将设计任务拆分为点阵扫描模块、数码管显示模块、音乐播放模块三大模块进行设计。其中，该设计的顶层模块与音乐播放模块直接相连，即将输入和输出与音乐播放模块直接关联。在音乐播放模块中，根据得到的输入信号的不同决定所播放的音调和传递给点阵扫描模块、数码管显示模块的参数，从而完成实验题目所需要满足的基本要求。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h3 id="3-1-1-点阵的显示"><a href="#3-1-1-点阵的显示" class="headerlink" title="3.1.1 点阵的显示"></a>3.1.1 点阵的显示</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;点阵模块在可编程实验板上使用的是 8×8 红绿双色点阵，由8行8列共 64 个红色发光二极管和 8 行 8 列 64 个绿色发光二极管封装在一元器件上面构成的。元器件对外引出 24 条控制线，分别为行信号（发光二极管公共端）ROW7－ROW0、红色发光二极管列信号 R_COL7－R_COL0 和绿色发光二极管列信号 G_COL7－G_COL0。点阵模块的构造示意图如图 3 所示。</p>
<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130213727888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 3 点阵模块的构造示意图<b></center>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>由图3可以得出：<br>（1）点阵上某个点显示红色的条件：控制该点行的引脚输出低电平，控制该点红色发光二极管列信号引脚输出高电平，控制该点绿色发光二极管列信号引脚输出低电平。<br>（2）点阵上某个点显示绿色的条件：控制该点行的引脚输出低电平，控制该点红色发光二极管列信号引脚输出低电平，控制该点绿色发光二极管列信号引脚输出 高电平。<br>（3）点阵上某个点显示黄色的条件：控制该点行的引脚输出低电平，控制该点红色发光二极管列信号引脚输出高电平，控制该点绿色发光二极管列信号引脚输出高电平。<br>由于该可编程实验班的点阵中，绿色发出的光强明显低于红色发出的光强，因此在产生黄色的时候，需要对红光和绿光进行分频。经过试验发现，当红光和绿光的占空比为1:3时，产生的效果较为明显。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;基于上述知识，再利用人眼的视觉暂留现象，使用1MHZ的系统时钟，对点阵进行行扫描，即可轻松地显示所需要的图像。具体的实现方法笔者将在3.2节中详细介绍。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h3 id="3-1-2-数码管的显示"><a href="#3-1-2-数码管的显示" class="headerlink" title="3.1.2 数码管的显示"></a>3.1.2 数码管的显示</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7 段数码管模块由8个7段数码管组成，数码管编号分别为DISP7－DISP0。在数码管右边电路板上有各段的编号图示。本开发板上8个7段数码管的段码输入端是并联在一起的，8个位码相互独立。当 AA－AP 控制引脚输出高电平，同时需要显示的数码管的共阴极端 CAT为低电平时，该数码管相应的端就点亮。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;根据该可编程实验板的特点，当使用数码管DS6和DS7时应将拨码开关SW10的第3位和第4位拨到上边。当拨码开关SW10的第3位和第4位拨到下边时数码管DS6和DS7的位码控制端CAT6和CAT7不受EPM1270T144C5 芯片的引脚PIN_30和PIN_31控制，此时EPM1270T144C5芯片的引脚PIN_30和PIN_31作为外部扩展接口使用。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数码管显示的原理图如图4所示。根据原理图和可编程实验板的说明书，点亮相应位置的段码即可在数码管上呈现出所需要的数字。</p>
<div align=center>
<image src="https://img-blog.csdnimg.cn/2021013021392916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 4 数码管显示的原理图<b></center>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h3 id="3-1-3-音调的控制"><a href="#3-1-3-音调的控制" class="headerlink" title="3.1.3 音调的控制"></a>3.1.3 音调的控制</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;频率的高低决定了音调的高低。音乐的十二平均率规定：每两个 8 度音（如简谱中的中音 1 与高音 1）之间的频率相差一倍。在两个 8度音之间，又可分为 12个半音，每两个半音的频率比为 $12\sqrt{2}$。 另外，音名 A(简谱中的低音 6)的频率为 440Hz，音名 B到 C之间、E到 F之间为半音，其余为全音。简谱中音名与频率的关系如1.1节中表1所示。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;所有不同频率的信号都是从同一个基准频率分频得到的。由于音阶频率多为非整数，而分频系数又不能为小数，故必须将计算得到的分频数四舍五入取整。若基准频率过低，则由于分频比太小，四舍五入取整后的误差较大；若基准频率过高，虽然误差变小，但分频数将变大。实际的设计综合考虑这两方面的因素，在尽量减小频率误差的前提下取合适的基准频率。基于点阵显示模块对于系统时钟的要求，本实验中笔者对1MHZ的时钟进行分频，进而输出到发声器件。实际上，只要各个音名间的相对频率关系不变，演奏出的乐曲听起来都不会 “走调”。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本实验需要演奏从低音1到高音7跨越三个八度的音符，因此通过简单的计算可以得出，在基准频率为1MHZ时，简谱中各音阶相应的分频系数如表2所示。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<center><b>表 2 简谱中各音阶相应的分频系数<b></center>
<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130214425405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，对于乐曲中的休止符，只需要将输出到发声器件的变量赋值为0，发声器件便不会发出声音。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h3 id="3-1-4-音长的控制"><a href="#3-1-4-音长的控制" class="headerlink" title="3.1.4 音长的控制"></a>3.1.4 音长的控制</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;音符的持续时间必须根据乐曲的速度及每个音符的节拍数来确定。该实验中音长的控制主要应用于自动演奏模块中。本实验演奏的《天空之城》片段，最短的音符为4分音符，假设一个全音符持续的时间为1秒，则4分音符所需要持续的时间为0.25秒，即需要通过分频提供一个4HZ的时钟信号，从而控制音长。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;控制音长是通过控制计数器预置数的停留时间来实现的，预置数停留的时间越长，则该音符演奏的时间越长。每个音符的演奏时间都是0.25秒的整数倍，对于节拍较长的音符，如 2 分音符，在自动播放的时候连续输出两次该音符即可。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h2 id="3-2-总体框图"><a href="#3-2-总体框图" class="headerlink" title="3.2 总体框图"></a>3.2 总体框图</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该实验设计时的总体技术框图如图5所示。</p>
<div align=center>
<image src="https://img-blog.csdnimg.cn/2021013021465171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 5 总体技术框图<b></center>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h2 id="3-3-分块设计"><a href="#3-3-分块设计" class="headerlink" title="3.3 分块设计"></a>3.3 分块设计</h2><h3 id="3-3-1-顶层模块"><a href="#3-3-1-顶层模块" class="headerlink" title="3.3.1 顶层模块"></a>3.3.1 顶层模块</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clk 表示输入时钟信号，本实验中选用的是 1MHZ 的系统时钟。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; auto_sw 表示自动播放开关，当 auto_sw 为 1 时，开始自动播放乐曲《天空之城》；当 auto_sw 为 0 时，为手动演奏状态。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SW 表示手动演奏的音域切换。当 SW=3’b100 时，演奏低音音域；当 SW=3’b010 时， 演奏中音音域；当 SW=3’b001 时，演奏高音音域。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BTN 表示手动演奏的音符。BTN[0]至 BTN[6]分别表示音符 1、2、3、4、5、6、7，按 下按键时蜂鸣器即产生响应的音符。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;beep 表示输出给蜂鸣器的信号。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row, col_r, col_g 分别表示输出给点阵列的行、列信号。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; seg 表示控制八段数码管的输出信号，CAT 为控制八段数码管的共阴极端信号。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于该模块为程序的顶层模块，因此主要功能为定义输入输出信号和调用功能模块。具体的Verilog HDL语言实现如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>	<span class="comment">//电子琴顶层模块  </span></span><br><span class="line"><span class="number">2.</span>	<span class="function"><span class="keyword">module</span> <span class="title">electronic_organ</span><span class="params">(clk, auto_sw, SW, BTN,  </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">3.</span>	                            beep, row, col_r, col_g, seg, CAT)</span></span>;                   </span><br><span class="line"><span class="number">4.</span>	input [<span class="number">2</span>:<span class="number">0</span>]SW;  </span><br><span class="line"><span class="number">5.</span>	input [<span class="number">6</span>:<span class="number">0</span>]BTN;  </span><br><span class="line"><span class="number">6.</span>	input clk, auto_sw;  </span><br><span class="line"><span class="number">7.</span>	output beep; <span class="comment">//蜂鸣器初始化  </span></span><br><span class="line"><span class="number">8.</span>	output [<span class="number">7</span>:<span class="number">0</span>]row, col_r, col_g, seg;  </span><br><span class="line"><span class="number">9.</span>	output reg [<span class="number">7</span>:<span class="number">0</span>]CAT = <span class="number">7&#x27;b</span>0111_1111; <span class="comment">//仅7号数码管亮                 </span></span><br><span class="line"><span class="number">10.</span>	  </span><br><span class="line"><span class="number">11.</span>	<span class="comment">//输出音调  </span></span><br><span class="line"><span class="number">12.</span>	<span class="function">play <span class="title">p1</span><span class="params">(.clk(clk),   </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">13.</span>	          .auto_sw(auto_sw),  </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">14.</span>	          .key(BTN),   </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">15.</span>	          .SW(SW),  </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">16.</span>	          .beep(beep),  </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">17.</span>	          .row(row),  </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">18.</span>	         .col_r(col_r),   </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">19.</span>	          .col_g(col_g),  </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">20.</span>	          .seg(seg))</span></span>;  </span><br><span class="line"><span class="number">21.</span>	            </span><br><span class="line"><span class="number">22.</span>	  </span><br><span class="line"><span class="number">23.</span>	endmodule  </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h3 id="3-3-2-分频模块"><a href="#3-3-2-分频模块" class="headerlink" title="3.3.2 分频模块"></a>3.3.2 分频模块</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 由于本实验中需要发出不同音调的声音，分频模块是必不可少的一个模块。笔者使用的是计数器对时钟信号进行分频。其中，clk表示输入的系统时钟信号，clk_out表示分频后输出的时钟信号。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在该模块设计中，笔者首先定义一个用于分频输出的时钟信号clk_out，计数器随着系统时钟工作，计数器计数达到预置位前，clk_out始终保持原值。当计数达到预置位时，将clk_out翻转一次，从而可以通过改变预置位得到需要频率的时钟信号。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 该模块具体的Verilog HDL语言实现如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>	<span class="comment">/* </span></span><br><span class="line"><span class="comment">2.	*   Name: division.v </span></span><br><span class="line"><span class="comment">3.	*   Author: lgc0208</span></span><br><span class="line"><span class="comment">4.	*   Date: 2020-11-22 </span></span><br><span class="line"><span class="comment">5.	*   Function: 时钟分频,对时钟信号进行分频，输出信号为输入信号频率的1/2DIV_NUM倍 </span></span><br><span class="line"><span class="comment">6.	*   Input: 时钟信号clk </span></span><br><span class="line"><span class="comment">7.	*   Output: 分频后的信号clk_out </span></span><br><span class="line"><span class="comment">8.	*/</span>  </span><br><span class="line"><span class="number">9.</span>	<span class="function"><span class="keyword">module</span> <span class="title">division</span><span class="params">(clk, clk_out)</span></span>;  </span><br><span class="line"><span class="number">10.</span>	      </span><br><span class="line"><span class="number">11.</span>	    parameter DIV_NUM = <span class="number">1</span>; <span class="comment">//对时钟进行分频  </span></span><br><span class="line"><span class="number">12.</span>	      </span><br><span class="line"><span class="number">13.</span>	    input clk;  </span><br><span class="line"><span class="number">14.</span>	    output reg clk_out;  </span><br><span class="line"><span class="number">15.</span>	    reg [<span class="number">19</span>:<span class="number">0</span>]count;  </span><br><span class="line"><span class="number">16.</span>	      </span><br><span class="line"><span class="number">17.</span>	    always@(posedge clk)  </span><br><span class="line"><span class="number">18.</span>	    begin  </span><br><span class="line"><span class="number">19.</span>	        <span class="keyword">if</span>(count == DIV_NUM)  </span><br><span class="line"><span class="number">20.</span>	        begin  </span><br><span class="line"><span class="number">21.</span>	            clk_out &lt;= !clk_out;  </span><br><span class="line"><span class="number">22.</span>	            count &lt;= <span class="number">0</span>;  </span><br><span class="line"><span class="number">23.</span>	        end  </span><br><span class="line"><span class="number">24.</span>	        <span class="keyword">else</span>  </span><br><span class="line"><span class="number">25.</span>	            count &lt;= count + <span class="number">1</span>;  </span><br><span class="line"><span class="number">26.</span>	    end  </span><br><span class="line"><span class="number">27.</span>	      </span><br><span class="line"><span class="number">28.</span>	endmodule  </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h3 id="3-3-3-点阵列扫描模块"><a href="#3-3-3-点阵列扫描模块" class="headerlink" title="3.3.3 点阵列扫描模块"></a>3.3.3 点阵列扫描模块</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在本实验中，点阵列的显示需要随着音调的变化而产生相应的变化，因此需要点阵列扫描模块来实现相应的功能。在点阵列的显示中，常用的扫描方式有行扫描和列扫描。使用列扫描时，容易出现同一列的灯光颜色亮度有较大差异，因此笔者此处选择了行扫描的方式扫描点阵。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 同时，由于该实验所使用的可编程实验板点阵列中绿光的强度要明显低于红光，因此在产生黄光时需要对绿光和红光进行占空比的调整。在实验中发现，红光和绿光占空比为1:3时产生的效果较好。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 该模块中，clk表示输入的时钟信号，SW表示颜色显示的切换信号，key表示所获得的按键信号，row，col_r，col_g分别表示控制点阵的行信号、控制红色发光二极管的列信号和控制绿色发光二极管的列信号。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 该模块具体的Verilog HDL语言实现如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>	<span class="comment">/* </span></span><br><span class="line"><span class="comment">2.	*   Name: show_LED.v </span></span><br><span class="line"><span class="comment">3.	*   Author: lgc0208</span></span><br><span class="line"><span class="comment">4.	*   Date: 2020-11-21 </span></span><br><span class="line"><span class="comment">5.	*   Function:在点阵列上显示不同颜色 </span></span><br><span class="line"><span class="comment">6.	*   Input: 时钟信号clk，颜色显示切换[2:0]SW,按键信号key </span></span><br><span class="line"><span class="comment">7.	*   Output: 控制点阵的行信号row，红色列信号col_r，绿色列信号col_g </span></span><br><span class="line"><span class="comment">8.	* </span></span><br><span class="line"><span class="comment">9.	*   Update: 2020-11-22 </span></span><br><span class="line"><span class="comment">10.	*   Author: LIN Guocheng </span></span><br><span class="line"><span class="comment">11.	*   Function: 按下按键后，对应列灭。 </span></span><br><span class="line"><span class="comment">12.	*/</span>  </span><br><span class="line"><span class="number">13.</span>	  </span><br><span class="line"><span class="number">14.</span>	<span class="function"><span class="keyword">module</span> <span class="title">show_LED</span><span class="params">(clk, SW, key, row,col_r, col_g)</span></span>;  </span><br><span class="line"><span class="number">15.</span>	    input clk;  </span><br><span class="line"><span class="number">16.</span>	    input [<span class="number">2</span>:<span class="number">0</span>]SW;  </span><br><span class="line"><span class="number">17.</span>	    input [<span class="number">6</span>:<span class="number">0</span>]key;  </span><br><span class="line"><span class="number">18.</span>	    output reg [<span class="number">7</span>:<span class="number">0</span>]row,col_r, col_g;  </span><br><span class="line"><span class="number">19.</span>	    reg [<span class="number">2</span>:<span class="number">0</span>] count;  </span><br><span class="line"><span class="number">20.</span>	  </span><br><span class="line"><span class="number">21.</span>	    wire clk_3r, clk_1g;  </span><br><span class="line"><span class="number">22.</span>	    reg [<span class="number">2</span>:<span class="number">0</span>] count_r, count_g;  </span><br><span class="line"><span class="number">23.</span>	      </span><br><span class="line"><span class="number">24.</span>	    <span class="comment">//分频，红绿光占空比1:3，显示黄色  </span></span><br><span class="line"><span class="number">25.</span>	    division #(<span class="number">1</span>/<span class="number">8</span>) <span class="built_in">d1r</span>(.<span class="built_in">clk</span>(clk), .<span class="built_in">clk_out</span>(clk_3r));  </span><br><span class="line"><span class="number">26.</span>	    division #(<span class="number">3</span>/<span class="number">8</span>) <span class="built_in">d2g</span>(.<span class="built_in">clk</span>(clk), .<span class="built_in">clk_out</span>(clk_1g));  </span><br><span class="line"><span class="number">27.</span>	      </span><br><span class="line"><span class="number">28.</span>	    <span class="comment">//模8计数器  </span></span><br><span class="line"><span class="number">29.</span>	    always @(posedge clk)  </span><br><span class="line"><span class="number">30.</span>	    begin  </span><br><span class="line"><span class="number">31.</span>	        <span class="keyword">if</span>(count == <span class="number">3&#x27;b</span>111)  </span><br><span class="line"><span class="number">32.</span>	            count &lt;= <span class="number">3&#x27;b</span>000;  </span><br><span class="line"><span class="number">33.</span>	        <span class="keyword">else</span>  </span><br><span class="line"><span class="number">34.</span>	            count &lt;= count + <span class="number">1&#x27;b</span>1;  </span><br><span class="line"><span class="number">35.</span>	    end  </span><br><span class="line"><span class="number">36.</span>	      </span><br><span class="line"><span class="number">37.</span>	    always @(posedge clk_3r)  </span><br><span class="line"><span class="number">38.</span>	    begin  </span><br><span class="line"><span class="number">39.</span>	        <span class="keyword">if</span>(count_r == <span class="number">3&#x27;b</span>111)  </span><br><span class="line"><span class="number">40.</span>	            count_r &lt;= <span class="number">3&#x27;b</span>000;  </span><br><span class="line"><span class="number">41.</span>	        <span class="keyword">else</span>  </span><br><span class="line"><span class="number">42.</span>	            count_r &lt;= count_r + <span class="number">1&#x27;b</span>1;  </span><br><span class="line"><span class="number">43.</span>	    end  </span><br><span class="line"><span class="number">44.</span>	    always @(posedge clk_1g)  </span><br><span class="line"><span class="number">45.</span>	    begin  </span><br><span class="line"><span class="number">46.</span>	        <span class="keyword">if</span>(count_g == <span class="number">3&#x27;b</span>111)  </span><br><span class="line"><span class="number">47.</span>	            count_g &lt;= <span class="number">3&#x27;b</span>000;  </span><br><span class="line"><span class="number">48.</span>	        <span class="keyword">else</span>  </span><br><span class="line"><span class="number">49.</span>	            count_g &lt;= count_g + <span class="number">1&#x27;b</span>1;  </span><br><span class="line"><span class="number">50.</span>	    end  </span><br><span class="line"><span class="number">51.</span>	      </span><br><span class="line"><span class="number">52.</span>	      </span><br><span class="line"><span class="number">53.</span>	      </span><br><span class="line"><span class="number">54.</span>	        <span class="comment">//点阵显示部分   </span></span><br><span class="line"><span class="number">55.</span>	    always@(count <span class="keyword">or</span> count_r <span class="keyword">or</span> count_g)  </span><br><span class="line"><span class="number">56.</span>	    begin  </span><br><span class="line"><span class="number">57.</span>	        <span class="comment">//高音部分，显示黄色  </span></span><br><span class="line"><span class="number">58.</span>	        <span class="keyword">if</span>(SW == <span class="number">3&#x27;b</span>001)  </span><br><span class="line"><span class="number">59.</span>	        begin  </span><br><span class="line"><span class="number">60.</span>	            <span class="built_in"><span class="keyword">case</span></span>(count_r)  </span><br><span class="line"><span class="number">61.</span>	            <span class="number">3&#x27;b</span>000:begin row &lt;= <span class="number">8&#x27;b</span>1111_1111; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">62.</span>	            <span class="number">3&#x27;b</span>001:begin row &lt;= <span class="number">8&#x27;b</span>1011_1111; col_r &lt;= <span class="number">8&#x27;b</span>0100_0000; end  </span><br><span class="line"><span class="number">63.</span>	            <span class="number">3&#x27;b</span>010:begin row &lt;= <span class="number">8&#x27;b</span>1101_1111; col_r &lt;= <span class="number">8&#x27;b</span>0110_0000; end  </span><br><span class="line"><span class="number">64.</span>	            <span class="number">3&#x27;b</span>011:begin row &lt;= <span class="number">8&#x27;b</span>1110_1111; col_r &lt;= <span class="number">8&#x27;b</span>0111_0000; end  </span><br><span class="line"><span class="number">65.</span>	            <span class="number">3&#x27;b</span>100:begin row &lt;= <span class="number">8&#x27;b</span>1111_0111; col_r &lt;= <span class="number">8&#x27;b</span>0111_1000; end  </span><br><span class="line"><span class="number">66.</span>	            <span class="number">3&#x27;b</span>101:begin row &lt;= <span class="number">8&#x27;b</span>1111_1011; col_r &lt;= <span class="number">8&#x27;b</span>0111_1100; end  </span><br><span class="line"><span class="number">67.</span>	            <span class="number">3&#x27;b</span>110:begin row &lt;= <span class="number">8&#x27;b</span>1111_1101; col_r &lt;= <span class="number">8&#x27;b</span>0111_1110; end  </span><br><span class="line"><span class="number">68.</span>	            <span class="number">3&#x27;b</span>111:begin row &lt;= <span class="number">8&#x27;b</span>1111_1110; col_r &lt;= <span class="number">8&#x27;b</span>0111_1111; end  </span><br><span class="line"><span class="number">69.</span>	            endcase  </span><br><span class="line"><span class="number">70.</span>	            <span class="built_in"><span class="keyword">case</span></span>(count_g)  </span><br><span class="line"><span class="number">71.</span>	            <span class="number">3&#x27;b</span>000:begin row &lt;= <span class="number">8&#x27;b</span>1111_1111; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">72.</span>	            <span class="number">3&#x27;b</span>001:begin row &lt;= <span class="number">8&#x27;b</span>1011_1111; col_g &lt;= <span class="number">8&#x27;b</span>0100_0000; end  </span><br><span class="line"><span class="number">73.</span>	            <span class="number">3&#x27;b</span>010:begin row &lt;= <span class="number">8&#x27;b</span>1101_1111; col_g &lt;= <span class="number">8&#x27;b</span>0110_0000; end  </span><br><span class="line"><span class="number">74.</span>	            <span class="number">3&#x27;b</span>011:begin row &lt;= <span class="number">8&#x27;b</span>1110_1111; col_g &lt;= <span class="number">8&#x27;b</span>0111_0000; end  </span><br><span class="line"><span class="number">75.</span>	            <span class="number">3&#x27;b</span>100:begin row &lt;= <span class="number">8&#x27;b</span>1111_0111; col_g &lt;= <span class="number">8&#x27;b</span>0111_1000; end  </span><br><span class="line"><span class="number">76.</span>	            <span class="number">3&#x27;b</span>101:begin row &lt;= <span class="number">8&#x27;b</span>1111_1011; col_g &lt;= <span class="number">8&#x27;b</span>0111_1100; end  </span><br><span class="line"><span class="number">77.</span>	            <span class="number">3&#x27;b</span>110:begin row &lt;= <span class="number">8&#x27;b</span>1111_1101; col_g &lt;= <span class="number">8&#x27;b</span>0111_1110; end  </span><br><span class="line"><span class="number">78.</span>	            <span class="number">3&#x27;b</span>111:begin row &lt;= <span class="number">8&#x27;b</span>1111_1110; col_g &lt;= <span class="number">8&#x27;b</span>0111_1111; end  </span><br><span class="line"><span class="number">79.</span>	            endcase  </span><br><span class="line"><span class="number">80.</span>	              </span><br><span class="line"><span class="number">81.</span>	        end  </span><br><span class="line"><span class="number">82.</span>	        <span class="comment">//中音部分，显示红色  </span></span><br><span class="line"><span class="number">83.</span>	        <span class="keyword">else</span> <span class="keyword">if</span>(SW == <span class="number">3&#x27;b</span>010)  </span><br><span class="line"><span class="number">84.</span>	        begin  </span><br><span class="line"><span class="number">85.</span>	            <span class="built_in"><span class="keyword">case</span></span>(count)  </span><br><span class="line"><span class="number">86.</span>	            <span class="number">3&#x27;b</span>000:begin row &lt;= <span class="number">8&#x27;b</span>1111_1111; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">87.</span>	            <span class="number">3&#x27;b</span>001:begin row &lt;= <span class="number">8&#x27;b</span>1011_1111; col_r &lt;= <span class="number">8&#x27;b</span>0100_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">88.</span>	            <span class="number">3&#x27;b</span>010:begin row &lt;= <span class="number">8&#x27;b</span>1101_1111; col_r &lt;= <span class="number">8&#x27;b</span>0110_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">89.</span>	            <span class="number">3&#x27;b</span>011:begin row &lt;= <span class="number">8&#x27;b</span>1110_1111; col_r &lt;= <span class="number">8&#x27;b</span>0111_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">90.</span>	            <span class="number">3&#x27;b</span>100:begin row &lt;= <span class="number">8&#x27;b</span>1111_0111; col_r &lt;= <span class="number">8&#x27;b</span>0111_1000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">91.</span>	            <span class="number">3&#x27;b</span>101:begin row &lt;= <span class="number">8&#x27;b</span>1111_1011; col_r &lt;= <span class="number">8&#x27;b</span>0111_1100; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">92.</span>	            <span class="number">3&#x27;b</span>110:begin row &lt;= <span class="number">8&#x27;b</span>1111_1101; col_r &lt;= <span class="number">8&#x27;b</span>0111_1110; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">93.</span>	            <span class="number">3&#x27;b</span>111:begin row &lt;= <span class="number">8&#x27;b</span>1111_1110; col_r &lt;= <span class="number">8&#x27;b</span>0111_1111; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">94.</span>	            endcase  </span><br><span class="line"><span class="number">95.</span>	        end  </span><br><span class="line"><span class="number">96.</span>	        <span class="comment">//低音部分，显示绿色  </span></span><br><span class="line"><span class="number">97.</span>	        <span class="keyword">else</span> <span class="keyword">if</span>(SW == <span class="number">3&#x27;b</span>100)  </span><br><span class="line"><span class="number">98.</span>	        begin  </span><br><span class="line"><span class="number">99.</span>	            <span class="built_in"><span class="keyword">case</span></span>(count)  </span><br><span class="line"><span class="number">100.</span>	            <span class="number">3&#x27;b</span>000:begin row &lt;= <span class="number">8&#x27;b</span>1111_1111; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">101.</span>	            <span class="number">3&#x27;b</span>001:begin row &lt;= <span class="number">8&#x27;b</span>1011_1111; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0100_0000; end  </span><br><span class="line"><span class="number">102.</span>	            <span class="number">3&#x27;b</span>010:begin row &lt;= <span class="number">8&#x27;b</span>1101_1111; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0110_0000; end  </span><br><span class="line"><span class="number">103.</span>	            <span class="number">3&#x27;b</span>011:begin row &lt;= <span class="number">8&#x27;b</span>1110_1111; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0111_0000; end  </span><br><span class="line"><span class="number">104.</span>	            <span class="number">3&#x27;b</span>100:begin row &lt;= <span class="number">8&#x27;b</span>1111_0111; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0111_1000; end  </span><br><span class="line"><span class="number">105.</span>	            <span class="number">3&#x27;b</span>101:begin row &lt;= <span class="number">8&#x27;b</span>1111_1011; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0111_1100; end  </span><br><span class="line"><span class="number">106.</span>	            <span class="number">3&#x27;b</span>110:begin row &lt;= <span class="number">8&#x27;b</span>1111_1101; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0111_1110; end  </span><br><span class="line"><span class="number">107.</span>	            <span class="number">3&#x27;b</span>111:begin row &lt;= <span class="number">8&#x27;b</span>1111_1110; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0111_1111; end  </span><br><span class="line"><span class="number">108.</span>	            endcase  </span><br><span class="line"><span class="number">109.</span>	        end  </span><br><span class="line"><span class="number">110.</span>	        <span class="keyword">else</span>  </span><br><span class="line"><span class="number">111.</span>	        begin  </span><br><span class="line"><span class="number">112.</span>	            <span class="built_in"><span class="keyword">case</span></span>(count)  </span><br><span class="line"><span class="number">113.</span>	            <span class="number">3&#x27;b</span>000:begin row &lt;= <span class="number">8&#x27;b</span>0000_0000; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">114.</span>	            <span class="number">3&#x27;b</span>001:begin row &lt;= <span class="number">8&#x27;b</span>0000_0000; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">115.</span>	            <span class="number">3&#x27;b</span>010:begin row &lt;= <span class="number">8&#x27;b</span>0000_0000; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">116.</span>	            <span class="number">3&#x27;b</span>011:begin row &lt;= <span class="number">8&#x27;b</span>0000_0000; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">117.</span>	            <span class="number">3&#x27;b</span>100:begin row &lt;= <span class="number">8&#x27;b</span>0000_0000; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">118.</span>	            <span class="number">3&#x27;b</span>101:begin row &lt;= <span class="number">8&#x27;b</span>0000_0000; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">119.</span>	            <span class="number">3&#x27;b</span>110:begin row &lt;= <span class="number">8&#x27;b</span>0000_0000; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">120.</span>	            <span class="number">3&#x27;b</span>111:begin row &lt;= <span class="number">8&#x27;b</span>0000_0000; col_r &lt;= <span class="number">8&#x27;b</span>0000_0000; col_g &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">121.</span>	            endcase  </span><br><span class="line"><span class="number">122.</span>	        end  </span><br><span class="line"><span class="number">123.</span>	          </span><br><span class="line"><span class="number">124.</span>	        <span class="keyword">if</span>(key[<span class="number">0</span>] == <span class="number">1</span>) begin col_r[<span class="number">0</span>] &lt;= <span class="number">0</span>; col_g[<span class="number">0</span>] &lt;= <span class="number">0</span>; end  </span><br><span class="line"><span class="number">125.</span>	        <span class="keyword">if</span>(key[<span class="number">1</span>] == <span class="number">1</span>) begin col_r[<span class="number">1</span>] &lt;= <span class="number">0</span>; col_g[<span class="number">1</span>] &lt;= <span class="number">0</span>; end  </span><br><span class="line"><span class="number">126.</span>	        <span class="keyword">if</span>(key[<span class="number">2</span>] == <span class="number">1</span>) begin col_r[<span class="number">2</span>] &lt;= <span class="number">0</span>; col_g[<span class="number">2</span>] &lt;= <span class="number">0</span>; end  </span><br><span class="line"><span class="number">127.</span>	        <span class="keyword">if</span>(key[<span class="number">3</span>] == <span class="number">1</span>) begin col_r[<span class="number">3</span>] &lt;= <span class="number">0</span>; col_g[<span class="number">3</span>] &lt;= <span class="number">0</span>; end  </span><br><span class="line"><span class="number">128.</span>	        <span class="keyword">if</span>(key[<span class="number">4</span>] == <span class="number">1</span>) begin col_r[<span class="number">4</span>] &lt;= <span class="number">0</span>; col_g[<span class="number">4</span>] &lt;= <span class="number">0</span>; end  </span><br><span class="line"><span class="number">129.</span>	        <span class="keyword">if</span>(key[<span class="number">5</span>] == <span class="number">1</span>) begin col_r[<span class="number">5</span>] &lt;= <span class="number">0</span>; col_g[<span class="number">5</span>] &lt;= <span class="number">0</span>; end  </span><br><span class="line"><span class="number">130.</span>	        <span class="keyword">if</span>(key[<span class="number">6</span>] == <span class="number">1</span>) begin col_r[<span class="number">6</span>] &lt;= <span class="number">0</span>; col_g[<span class="number">6</span>] &lt;= <span class="number">0</span>; end  </span><br><span class="line"><span class="number">131.</span>	          </span><br><span class="line"><span class="number">132.</span>	    end   </span><br><span class="line"><span class="number">133.</span>	endmodule </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h3 id="3-3-4-数码管显示模块"><a href="#3-3-4-数码管显示模块" class="headerlink" title="3.3.4 数码管显示模块"></a>3.3.4 数码管显示模块</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7 段数码管模块由 8 个 7 段数码管组成，每个数码管的结构如图4所示，在2.1.2节中笔者也对数码管的显示原理进行了详细的说明。该模块中，key表示输入的按键信号，控制数码管所显示的数字；clk表示系统时钟信号，用于扫描并呈现所需要展现的数字；seg表示数码管显示信号，为该模块中输出到数码管所用的信号。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 该模块具体的Verilog HDL语言实现如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>	<span class="comment">/* </span></span><br><span class="line"><span class="comment">2.	*   Name: show_seg_tube.v </span></span><br><span class="line"><span class="comment">3.	*   Author: lgc0208</span></span><br><span class="line"><span class="comment">4.	*   Date: 2020-11-23 </span></span><br><span class="line"><span class="comment">5.	*   Function: 根据按键显示不同数字 </span></span><br><span class="line"><span class="comment">6.	*   Input: 按键信号key,时钟信号clk </span></span><br><span class="line"><span class="comment">7.	*   Output: 数码管显示信号seg </span></span><br><span class="line"><span class="comment">8.	*/</span>  </span><br><span class="line"><span class="number">9.</span>	  </span><br><span class="line"><span class="number">10.</span>	<span class="function"><span class="keyword">module</span> <span class="title">show_seg_tube</span><span class="params">(key, clk, seg)</span></span>;  </span><br><span class="line"><span class="number">11.</span>	  </span><br><span class="line"><span class="number">12.</span>	    input [<span class="number">6</span>:<span class="number">0</span>] key;  </span><br><span class="line"><span class="number">13.</span>	    input clk;  </span><br><span class="line"><span class="number">14.</span>	    output reg [<span class="number">7</span>:<span class="number">0</span>]seg;  </span><br><span class="line"><span class="number">15.</span>	      </span><br><span class="line"><span class="number">16.</span>	    always@(clk)  </span><br><span class="line"><span class="number">17.</span>	    begin  </span><br><span class="line"><span class="number">18.</span>	    <span class="keyword">if</span>(key[<span class="number">0</span>] == <span class="number">1</span>) begin seg &lt;= <span class="number">8&#x27;b</span>0000_0110; end <span class="comment">//显示1  </span></span><br><span class="line"><span class="number">19.</span>	    <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">1</span>] == <span class="number">1</span>) begin seg &lt;= <span class="number">8&#x27;b</span>0101_1011; end <span class="comment">//显示2  </span></span><br><span class="line"><span class="number">20.</span>	    <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">2</span>] == <span class="number">1</span>) begin seg &lt;= <span class="number">8&#x27;b</span>0100_1111; end <span class="comment">//显示3  </span></span><br><span class="line"><span class="number">21.</span>	    <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">3</span>] == <span class="number">1</span>) begin seg &lt;= <span class="number">8&#x27;b</span>0110_0110; end <span class="comment">//显示4  </span></span><br><span class="line"><span class="number">22.</span>	    <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">4</span>] == <span class="number">1</span>) begin seg &lt;= <span class="number">8&#x27;b</span>0110_1101; end <span class="comment">//显示5  </span></span><br><span class="line"><span class="number">23.</span>	    <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">5</span>] == <span class="number">1</span>) begin seg &lt;= <span class="number">8&#x27;b</span>0111_1101; end <span class="comment">//显示6  </span></span><br><span class="line"><span class="number">24.</span>	    <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">6</span>] == <span class="number">1</span>) begin seg &lt;= <span class="number">8&#x27;b</span>0000_0111; end <span class="comment">//显示7  </span></span><br><span class="line"><span class="number">25.</span>	    <span class="keyword">else</span> begin seg &lt;= <span class="number">8&#x27;b</span>0000_0000; end  </span><br><span class="line"><span class="number">26.</span>	    end  </span><br><span class="line"><span class="number">27.</span>	      </span><br><span class="line"><span class="number">28.</span>	endmodule</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h3 id="3-3-5-音乐演奏模块"><a href="#3-3-5-音乐演奏模块" class="headerlink" title="3.3.5 音乐演奏模块"></a>3.3.5 音乐演奏模块</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 音乐演奏模块是该实验中所有功能模块的核心。首先，笔者将先对该部分的输入输出信号进行说明。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; clk表示输入时钟信号，本实验中选用的是1MHZ的系统时钟。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; auto_sw表示自动播放开关，当auto_sw为1时，开始自动播放乐曲《天空之城》；当auto_sw为0时，为手动演奏状态。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SW表示手动演奏的音域切换。当SW=3’b100时，演奏低音音域；当SW=3’b010时，演奏中音音域；当SW=3’b001时，演奏高音音域。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BTN表示手动演奏的音符。BTN[0]至BTN[6]分别表示音符1、2、3、4、5、6、7，按下按键时蜂鸣器即产生响应的音符。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; beep表示输出给蜂鸣器的信号。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; row, col_r, col_g分别表示输出给点阵列的行、列信号。<br>    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; seg表示控制八段数码管的输出信号。<br>    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在该模块中，首先调用分频器模块，产生低音、中音、高音三个音域共21种不同频率的音符。并调用分频器模块产生一个4HZ的时钟信号，用于控制自动播放每个音符单元的持续时间。当自动播放控制信号auto_sw为1时，用于自动播放的计数器开始工作，循环播放事先存在程序中的《天空之城》音乐。当自动播放控制信号auto_sw为0时，为手动播放模式。此时，通过SW信号检测用户所选择的音域，通过BTN信号检测用户所选择要演奏的音符，并将事先完成分频的对应时钟信号赋值给信号beep，并输出到蜂鸣器，产生对应的音调。同时，根据SW信号和BTN信号的检测结果，将用户所选择的音域和音符信息传递给点阵列扫描模块和数码管显示模块，在点阵列和数码管上出现对应的图案或数字。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 该模块具体的Verilog HDL语言实现如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>	<span class="comment">/* </span></span><br><span class="line"><span class="comment">2.	*   Name: play.v </span></span><br><span class="line"><span class="comment">3.	*	Author: lgc0208</span></span><br><span class="line"><span class="comment">4.	*   Date: 2020-11-29 </span></span><br><span class="line"><span class="comment">5.	*   Function: 根据按键演奏不同音符 </span></span><br><span class="line"><span class="comment">6.	*   Input: 时钟信号clk，自动播放信号auto_sw, 按键信号key, 音域切换信号SW </span></span><br><span class="line"><span class="comment">7.	*   Output: 蜂鸣器信号beep, 点阵列行信号row, 点阵列列信号col_r, col_g，数码管显示信号seg </span></span><br><span class="line"><span class="comment">8.	*/</span>  </span><br><span class="line"><span class="number">9.</span>	  </span><br><span class="line"><span class="number">10.</span>	  </span><br><span class="line"><span class="number">11.</span>	<span class="function"><span class="keyword">module</span> <span class="title">play</span><span class="params">(clk, auto_sw, key, SW, beep, row, col_r, col_g, seg)</span></span>;  </span><br><span class="line"><span class="number">12.</span>	  </span><br><span class="line"><span class="number">13.</span>	    input clk; <span class="comment">//输入时钟1MHZ  </span></span><br><span class="line"><span class="number">14.</span>	    input [<span class="number">6</span>:<span class="number">0</span>] key;   </span><br><span class="line"><span class="number">15.</span>	    input [<span class="number">2</span>:<span class="number">0</span>] SW;   </span><br><span class="line"><span class="number">16.</span>	    input auto_sw; <span class="comment">//自动演奏开关  </span></span><br><span class="line"><span class="number">17.</span>	    output reg beep = <span class="number">0</span>; <span class="comment">//蜂鸣器  </span></span><br><span class="line"><span class="number">18.</span>	    output [<span class="number">7</span>:<span class="number">0</span>]row, col_r, col_g; <span class="comment">//点阵控制信号  </span></span><br><span class="line"><span class="number">19.</span>	    output [<span class="number">7</span>:<span class="number">0</span>]seg; <span class="comment">//数码管显示信号  </span></span><br><span class="line"><span class="number">20.</span>	    wire [<span class="number">6</span>:<span class="number">0</span>] high, middle, low; <span class="comment">//定义低中高音  </span></span><br><span class="line"><span class="number">21.</span>	      </span><br><span class="line"><span class="number">22.</span>	    reg [<span class="number">2</span>:<span class="number">0</span>] pitch; <span class="comment">//定义音高  </span></span><br><span class="line"><span class="number">23.</span>	    reg [<span class="number">6</span>:<span class="number">0</span>] tone; <span class="comment">//定义音调  </span></span><br><span class="line"><span class="number">24.</span>	      </span><br><span class="line"><span class="number">25.</span>	    <span class="comment">//调用分频模块  </span></span><br><span class="line"><span class="number">26.</span>	    <span class="comment">//低音1~7(分别为low[0]~low[7])  </span></span><br><span class="line"><span class="number">27.</span>	    division #(<span class="number">3882</span>/<span class="number">2</span>) <span class="built_in">d_l1</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">28.</span>	                                 .<span class="built_in">clk_out</span>(low[<span class="number">0</span>]));  </span><br><span class="line"><span class="number">29.</span>	    division #(<span class="number">3405</span>/<span class="number">2</span>) <span class="built_in">d_l2</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">30.</span>	                                 .<span class="built_in">clk_out</span>(low[<span class="number">1</span>]));  </span><br><span class="line"><span class="number">31.</span>	    division #(<span class="number">3033</span>/<span class="number">2</span>) <span class="built_in">d_l3</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">32.</span>	                                 .<span class="built_in">clk_out</span>(low[<span class="number">2</span>]));  </span><br><span class="line"><span class="number">33.</span>	    division #(<span class="number">2863</span>/<span class="number">2</span>) <span class="built_in">d_l4</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">34.</span>	                                 .<span class="built_in">clk_out</span>(low[<span class="number">3</span>]));  </span><br><span class="line"><span class="number">35.</span>	    division #(<span class="number">2551</span>/<span class="number">2</span>) <span class="built_in">d_l5</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">36.</span>	                                 .<span class="built_in">clk_out</span>(low[<span class="number">4</span>]));  </span><br><span class="line"><span class="number">37.</span>	    division #(<span class="number">2272</span>/<span class="number">2</span>) <span class="built_in">d_l6</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">38.</span>	                                 .<span class="built_in">clk_out</span>(low[<span class="number">5</span>]));  </span><br><span class="line"><span class="number">39.</span>	    division #(<span class="number">2025</span>/<span class="number">2</span>) <span class="built_in">d_l7</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">40.</span>	                                 .<span class="built_in">clk_out</span>(low[<span class="number">6</span>]));  </span><br><span class="line"><span class="number">41.</span>	                        </span><br><span class="line"><span class="number">42.</span>	    <span class="comment">//中音1~7(分别为middle[0]~middle[7])  </span></span><br><span class="line"><span class="number">43.</span>	    division #(<span class="number">1911</span>/<span class="number">2</span>) <span class="built_in">d_m1</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">44.</span>	                                 .<span class="built_in">clk_out</span>(middle[<span class="number">0</span>]));  </span><br><span class="line"><span class="number">45.</span>	    division #(<span class="number">1702</span>/<span class="number">2</span>) <span class="built_in">d_m2</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">46.</span>	                                 .<span class="built_in">clk_out</span>(middle[<span class="number">1</span>]));  </span><br><span class="line"><span class="number">47.</span>	    division #(<span class="number">1516</span>/<span class="number">2</span>) <span class="built_in">d_m3</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">48.</span>	                                 .<span class="built_in">clk_out</span>(middle[<span class="number">2</span>]));  </span><br><span class="line"><span class="number">49.</span>	    division #(<span class="number">1431</span>/<span class="number">2</span>) <span class="built_in">d_m4</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">50.</span>	                                 .<span class="built_in">clk_out</span>(middle[<span class="number">3</span>]));  </span><br><span class="line"><span class="number">51.</span>	    division #(<span class="number">1275</span>/<span class="number">2</span>) <span class="built_in">d_m5</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">52.</span>	                                 .<span class="built_in">clk_out</span>(middle[<span class="number">4</span>]));  </span><br><span class="line"><span class="number">53.</span>	    division #(<span class="number">1136</span>/<span class="number">2</span>) <span class="built_in">d_m6</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">54.</span>	                                 .<span class="built_in">clk_out</span>(middle[<span class="number">5</span>]));  </span><br><span class="line"><span class="number">55.</span>	    division #(<span class="number">1012</span>/<span class="number">2</span>) <span class="built_in">d_m7</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">56.</span>	                                 .<span class="built_in">clk_out</span>(middle[<span class="number">6</span>]));  </span><br><span class="line"><span class="number">57.</span>	                                        </span><br><span class="line"><span class="number">58.</span>	    <span class="comment">//高音1~7(分别为high[0]~high[7])  </span></span><br><span class="line"><span class="number">59.</span>	    division #(<span class="number">956</span>/<span class="number">2</span>) <span class="built_in">d_h1</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">60.</span>	                                 .<span class="built_in">clk_out</span>(high[<span class="number">0</span>]));  </span><br><span class="line"><span class="number">61.</span>	    division #(<span class="number">851</span>/<span class="number">2</span>) <span class="built_in">d_h2</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">62.</span>	                                 .<span class="built_in">clk_out</span>(high[<span class="number">1</span>]));  </span><br><span class="line"><span class="number">63.</span>	    division #(<span class="number">758</span>/<span class="number">2</span>) <span class="built_in">d_h3</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">64.</span>	                                 .<span class="built_in">clk_out</span>(high[<span class="number">2</span>]));  </span><br><span class="line"><span class="number">65.</span>	    division #(<span class="number">715</span>/<span class="number">2</span>) <span class="built_in">d_h4</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">66.</span>	                                 .<span class="built_in">clk_out</span>(high[<span class="number">3</span>]));  </span><br><span class="line"><span class="number">67.</span>	    division #(<span class="number">637</span>/<span class="number">2</span>) <span class="built_in">d_h5</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">68.</span>	                                 .<span class="built_in">clk_out</span>(high[<span class="number">4</span>]));  </span><br><span class="line"><span class="number">69.</span>	    division #(<span class="number">568</span>/<span class="number">2</span>) <span class="built_in">d_h6</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">70.</span>	                                 .<span class="built_in">clk_out</span>(high[<span class="number">5</span>]));  </span><br><span class="line"><span class="number">71.</span>	    division #(<span class="number">506</span>/<span class="number">2</span>) <span class="built_in">d_h7</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">72.</span>	                                 .<span class="built_in">clk_out</span>(high[<span class="number">6</span>]));  </span><br><span class="line"><span class="number">73.</span>	      </span><br><span class="line"><span class="number">74.</span>	    <span class="comment">//4HZ分频,用于自动演奏  </span></span><br><span class="line"><span class="number">75.</span>	    division #(<span class="number">250000</span>/<span class="number">2</span>) <span class="built_in">d_4hz</span>(.<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">76.</span>	                                       .<span class="built_in">clk_out</span>(clk_4HZ));  </span><br><span class="line"><span class="number">77.</span>	    <span class="comment">//《天空之城》选用 126 个音符，需要7位2进制数表示  </span></span><br><span class="line"><span class="number">78.</span>	    reg [<span class="number">6</span>:<span class="number">0</span>]count; <span class="comment">//用于轮流播放不同音符      </span></span><br><span class="line"><span class="number">79.</span>	      </span><br><span class="line"><span class="number">80.</span>	    <span class="comment">//开始计数  </span></span><br><span class="line"><span class="number">81.</span>	    always@(posedge clk_4HZ)  </span><br><span class="line"><span class="number">82.</span>	    begin  </span><br><span class="line"><span class="number">83.</span>	        <span class="comment">//若按键按下，则开启自动播放计数，否则不工作  </span></span><br><span class="line"><span class="number">84.</span>	        <span class="keyword">if</span>(auto_sw)  </span><br><span class="line"><span class="number">85.</span>	        begin  </span><br><span class="line"><span class="number">86.</span>	            <span class="comment">//计数器  </span></span><br><span class="line"><span class="number">87.</span>	            <span class="keyword">if</span>(count == <span class="number">130</span>)  </span><br><span class="line"><span class="number">88.</span>	                count &lt;= <span class="number">0</span>;  </span><br><span class="line"><span class="number">89.</span>	            <span class="keyword">else</span>  </span><br><span class="line"><span class="number">90.</span>	                count &lt;= count + <span class="number">1&#x27;b</span>1;  </span><br><span class="line"><span class="number">91.</span>	        end  </span><br><span class="line"><span class="number">92.</span>	    end  </span><br><span class="line"><span class="number">93.</span>	      </span><br><span class="line"><span class="number">94.</span>	    <span class="comment">//开始演奏  </span></span><br><span class="line"><span class="number">95.</span>	    always@(posedge clk)  </span><br><span class="line"><span class="number">96.</span>	    begin  </span><br><span class="line"><span class="number">97.</span>	      </span><br><span class="line"><span class="number">98.</span>	        <span class="comment">//手动演奏  </span></span><br><span class="line"><span class="number">99.</span>	        <span class="keyword">if</span>(!auto_sw)   </span><br><span class="line"><span class="number">100.</span>	        begin  </span><br><span class="line"><span class="number">101.</span>	            pitch &lt;= SW;  </span><br><span class="line"><span class="number">102.</span>	            tone &lt;= key;  </span><br><span class="line"><span class="number">103.</span>	        end  </span><br><span class="line"><span class="number">104.</span>	              </span><br><span class="line"><span class="number">105.</span>	        <span class="comment">//自动演奏 天空之城  </span></span><br><span class="line"><span class="number">106.</span>	        <span class="keyword">else</span>  </span><br><span class="line"><span class="number">107.</span>	        begin  </span><br><span class="line"><span class="number">108.</span>	                <span class="built_in"><span class="keyword">case</span></span>(count)  </span><br><span class="line"><span class="number">109.</span>	                <span class="number">1</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//低音6   </span></span><br><span class="line"><span class="number">110.</span>	                <span class="number">2</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//低音7  </span></span><br><span class="line"><span class="number">111.</span>	                <span class="number">3</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">112.</span>	                <span class="number">4</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">113.</span>	                <span class="number">5</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">114.</span>	                <span class="number">6</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//低音7  </span></span><br><span class="line"><span class="number">115.</span>	                <span class="number">7</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">116.</span>	                <span class="number">8</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">117.</span>	                <span class="number">9</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//中音3  </span></span><br><span class="line"><span class="number">118.</span>	                <span class="number">10</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">119.</span>	                <span class="number">11</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//低音7  </span></span><br><span class="line"><span class="number">120.</span>	                <span class="number">12</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">121.</span>	                <span class="number">13</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">122.</span>	                <span class="number">14</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">123.</span>	                <span class="number">15</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">124.</span>	                <span class="number">16</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">125.</span>	                <span class="number">17</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//低音3  </span></span><br><span class="line"><span class="number">126.</span>	                <span class="number">18</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">127.</span>	                <span class="number">19</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//低音6   </span></span><br><span class="line"><span class="number">128.</span>	                <span class="number">20</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">129.</span>	                <span class="number">21</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">130.</span>	                <span class="number">22</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//低音5  </span></span><br><span class="line"><span class="number">131.</span>	                <span class="number">23</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//低音6   </span></span><br><span class="line"><span class="number">132.</span>	                <span class="number">24</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">133.</span>	                <span class="number">25</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">134.</span>	                <span class="number">26</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">135.</span>	                <span class="number">27</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//低音5  </span></span><br><span class="line"><span class="number">136.</span>	                <span class="number">28</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">137.</span>	                <span class="number">29</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">138.</span>	                <span class="number">30</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">139.</span>	                <span class="number">31</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">140.</span>	                <span class="number">32</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">141.</span>	                <span class="number">33</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//低音3  </span></span><br><span class="line"><span class="number">142.</span>	                <span class="number">34</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">143.</span>	                <span class="number">35</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_1000; end <span class="comment">//低音4  </span></span><br><span class="line"><span class="number">144.</span>	                <span class="number">36</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_1000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">145.</span>	                <span class="number">37</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_1000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">146.</span>	                <span class="number">38</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//低音3  </span></span><br><span class="line"><span class="number">147.</span>	                <span class="number">39</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_1000; end <span class="comment">//低音4  </span></span><br><span class="line"><span class="number">148.</span>	                <span class="number">40</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">149.</span>	                <span class="number">41</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">150.</span>	                <span class="number">42</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">151.</span>	                <span class="number">43</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//低音3  </span></span><br><span class="line"><span class="number">152.</span>	                <span class="number">44</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">153.</span>	                <span class="number">45</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">154.</span>	                <span class="number">46</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">155.</span>	                <span class="number">47</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">156.</span>	                <span class="number">48</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">157.</span>	                <span class="number">49</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">158.</span>	                <span class="number">50</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">159.</span>	                <span class="number">51</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//低音7  </span></span><br><span class="line"><span class="number">160.</span>	                <span class="number">52</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">161.</span>	                <span class="number">53</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">162.</span>	                <span class="number">54</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_1000; end <span class="comment">//低音4  </span></span><br><span class="line"><span class="number">163.</span>	                <span class="number">55</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_1000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">164.</span>	                <span class="number">56</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_1000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">165.</span>	                <span class="number">57</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_1000; end <span class="comment">//低音4  </span></span><br><span class="line"><span class="number">166.</span>	                <span class="number">58</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//低音7  </span></span><br><span class="line"><span class="number">167.</span>	                <span class="number">59</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">168.</span>	                <span class="number">60</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">169.</span>	                <span class="number">61</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">170.</span>	                <span class="number">62</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">171.</span>	                <span class="number">63</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">172.</span>	                <span class="number">64</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>000; tone&lt;=<span class="number">7&#x27;b</span>000_0000; end <span class="comment">//休止符  </span></span><br><span class="line"><span class="number">173.</span>	                <span class="number">65</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>000; tone&lt;=<span class="number">7&#x27;b</span>000_0000; end <span class="comment">//休止符  </span></span><br><span class="line"><span class="number">174.</span>	                <span class="number">66</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//低音6   </span></span><br><span class="line"><span class="number">175.</span>	                <span class="number">67</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//低音7  </span></span><br><span class="line"><span class="number">176.</span>	                <span class="number">68</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">177.</span>	                <span class="number">69</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">178.</span>	                <span class="number">70</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">179.</span>	                <span class="number">71</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//低音7  </span></span><br><span class="line"><span class="number">180.</span>	                <span class="number">72</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">181.</span>	                <span class="number">73</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">182.</span>	                <span class="number">74</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//中音3  </span></span><br><span class="line"><span class="number">183.</span>	                <span class="number">75</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">184.</span>	                <span class="number">76</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//低音7  </span></span><br><span class="line"><span class="number">185.</span>	                <span class="number">77</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">186.</span>	                <span class="number">78</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">187.</span>	                <span class="number">79</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">188.</span>	                <span class="number">80</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">189.</span>	                <span class="number">81</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">190.</span>	                <span class="number">82</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//低音3  </span></span><br><span class="line"><span class="number">191.</span>	                <span class="number">83</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">192.</span>	                <span class="number">84</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//低音6   </span></span><br><span class="line"><span class="number">193.</span>	                <span class="number">85</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">194.</span>	                <span class="number">86</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">195.</span>	                <span class="number">87</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//低音5  </span></span><br><span class="line"><span class="number">196.</span>	                <span class="number">88</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//低音6   </span></span><br><span class="line"><span class="number">197.</span>	                <span class="number">89</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">198.</span>	                <span class="number">90</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">199.</span>	                <span class="number">91</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">200.</span>	                <span class="number">92</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//低音5  </span></span><br><span class="line"><span class="number">201.</span>	                <span class="number">93</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">202.</span>	                <span class="number">94</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">203.</span>	                <span class="number">95</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">204.</span>	                <span class="number">96</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">205.</span>	                <span class="number">97</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">206.</span>	                <span class="number">98</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//低音3  </span></span><br><span class="line"><span class="number">207.</span>	                <span class="number">99</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>000_1000; end <span class="comment">//低音4  </span></span><br><span class="line"><span class="number">208.</span>	                <span class="number">100</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">209.</span>	                <span class="number">101</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//低音7  </span></span><br><span class="line"><span class="number">210.</span>	                <span class="number">102</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">211.</span>	                <span class="number">103</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">212.</span>	                <span class="number">104</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">213.</span>	                <span class="number">105</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">214.</span>	                <span class="number">106</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0010; end <span class="comment">//中音2  </span></span><br><span class="line"><span class="number">215.</span>	                <span class="number">107</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0010; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">216.</span>	                <span class="number">108</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0100; end <span class="comment">//中音3  </span></span><br><span class="line"><span class="number">217.</span>	                <span class="number">109</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">218.</span>	                <span class="number">110</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">219.</span>	                <span class="number">111</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">220.</span>	                <span class="number">112</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">221.</span>	                <span class="number">113</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>000; tone&lt;=<span class="number">7&#x27;b</span>000_0000; end <span class="comment">//休止符  </span></span><br><span class="line"><span class="number">222.</span>	                <span class="number">114</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>010; tone&lt;=<span class="number">7&#x27;b</span>000_0001; end <span class="comment">//中音1  </span></span><br><span class="line"><span class="number">223.</span>	                <span class="number">115</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//低音7  </span></span><br><span class="line"><span class="number">224.</span>	                <span class="number">116</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//低音6   </span></span><br><span class="line"><span class="number">225.</span>	                <span class="number">117</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">226.</span>	                <span class="number">118</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//低音7  </span></span><br><span class="line"><span class="number">227.</span>	                <span class="number">119</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>100_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">228.</span>	                <span class="number">120</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//低音5  </span></span><br><span class="line"><span class="number">229.</span>	                <span class="number">121</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>001_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">230.</span>	                <span class="number">122</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//低音6   </span></span><br><span class="line"><span class="number">231.</span>	                <span class="number">123</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">232.</span>	                <span class="number">124</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">233.</span>	                <span class="number">125</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>100; tone&lt;=<span class="number">7&#x27;b</span>010_0000; end <span class="comment">//延音  </span></span><br><span class="line"><span class="number">234.</span>	                <span class="number">126</span>: begin pitch&lt;=<span class="number">3&#x27;b</span>000; tone&lt;=<span class="number">7&#x27;b</span>000_0000; end <span class="comment">//休止符  </span></span><br><span class="line"><span class="number">235.</span>	                  </span><br><span class="line"><span class="number">236.</span>	                endcase  </span><br><span class="line"><span class="number">237.</span>	        end  </span><br><span class="line"><span class="number">238.</span>	          </span><br><span class="line"><span class="number">239.</span>	          </span><br><span class="line"><span class="number">240.</span>	       <span class="comment">//高音部分  </span></span><br><span class="line"><span class="number">241.</span>	        <span class="keyword">if</span>(pitch == <span class="number">3&#x27;b</span>001)   </span><br><span class="line"><span class="number">242.</span>	            begin  </span><br><span class="line"><span class="number">243.</span>	            <span class="built_in"><span class="keyword">case</span></span>(tone)  </span><br><span class="line"><span class="number">244.</span>	            <span class="number">7&#x27;b</span>000_0000:begin beep&lt;=<span class="number">0</span>; end  </span><br><span class="line"><span class="number">245.</span>	            <span class="number">7&#x27;b</span>000_0001:begin beep&lt;=high[<span class="number">0</span>]; end  </span><br><span class="line"><span class="number">246.</span>	            <span class="number">7&#x27;b</span>000_0010:begin beep&lt;=high[<span class="number">1</span>]; end  </span><br><span class="line"><span class="number">247.</span>	            <span class="number">7&#x27;b</span>000_0100:begin beep&lt;=high[<span class="number">2</span>]; end  </span><br><span class="line"><span class="number">248.</span>	            <span class="number">7&#x27;b</span>000_1000:begin beep&lt;=high[<span class="number">3</span>]; end  </span><br><span class="line"><span class="number">249.</span>	            <span class="number">7&#x27;b</span>001_0000:begin beep&lt;=high[<span class="number">4</span>]; end  </span><br><span class="line"><span class="number">250.</span>	            <span class="number">7&#x27;b</span>010_0000:begin beep&lt;=high[<span class="number">5</span>]; end  </span><br><span class="line"><span class="number">251.</span>	            <span class="number">7&#x27;b</span>100_0000:begin beep&lt;=high[<span class="number">6</span>]; end  </span><br><span class="line"><span class="number">252.</span>	            endcase  </span><br><span class="line"><span class="number">253.</span>	            end  </span><br><span class="line"><span class="number">254.</span>	          </span><br><span class="line"><span class="number">255.</span>	        <span class="comment">//中音部分  </span></span><br><span class="line"><span class="number">256.</span>	        <span class="keyword">else</span> <span class="keyword">if</span>(pitch == <span class="number">3&#x27;b</span>010)  </span><br><span class="line"><span class="number">257.</span>	            begin  </span><br><span class="line"><span class="number">258.</span>	            <span class="built_in"><span class="keyword">case</span></span>(tone)  </span><br><span class="line"><span class="number">259.</span>	            <span class="number">7&#x27;b</span>000_0000:begin beep&lt;=<span class="number">0</span>; end  </span><br><span class="line"><span class="number">260.</span>	            <span class="number">7&#x27;b</span>000_0001:begin beep&lt;=middle[<span class="number">0</span>]; end  </span><br><span class="line"><span class="number">261.</span>	            <span class="number">7&#x27;b</span>000_0010:begin beep&lt;=middle[<span class="number">1</span>]; end  </span><br><span class="line"><span class="number">262.</span>	            <span class="number">7&#x27;b</span>000_0100:begin beep&lt;=middle[<span class="number">2</span>]; end  </span><br><span class="line"><span class="number">263.</span>	            <span class="number">7&#x27;b</span>000_1000:begin beep&lt;=middle[<span class="number">3</span>]; end  </span><br><span class="line"><span class="number">264.</span>	            <span class="number">7&#x27;b</span>001_0000:begin beep&lt;=middle[<span class="number">4</span>]; end  </span><br><span class="line"><span class="number">265.</span>	            <span class="number">7&#x27;b</span>010_0000:begin beep&lt;=middle[<span class="number">5</span>]; end  </span><br><span class="line"><span class="number">266.</span>	            <span class="number">7&#x27;b</span>100_0000:begin beep&lt;=middle[<span class="number">6</span>]; end  </span><br><span class="line"><span class="number">267.</span>	            endcase  </span><br><span class="line"><span class="number">268.</span>	            end  </span><br><span class="line"><span class="number">269.</span>	          </span><br><span class="line"><span class="number">270.</span>	        <span class="comment">//低音部分  </span></span><br><span class="line"><span class="number">271.</span>	        <span class="keyword">else</span> <span class="keyword">if</span>(pitch == <span class="number">3&#x27;b</span>100)  </span><br><span class="line"><span class="number">272.</span>	            begin  </span><br><span class="line"><span class="number">273.</span>	            <span class="built_in"><span class="keyword">case</span></span>(tone)  </span><br><span class="line"><span class="number">274.</span>	            <span class="number">7&#x27;b</span>000_0000:begin beep&lt;=<span class="number">0</span>; end  </span><br><span class="line"><span class="number">275.</span>	            <span class="number">7&#x27;b</span>000_0001:begin beep&lt;=low[<span class="number">0</span>]; end  </span><br><span class="line"><span class="number">276.</span>	            <span class="number">7&#x27;b</span>000_0010:begin beep&lt;=low[<span class="number">1</span>]; end  </span><br><span class="line"><span class="number">277.</span>	            <span class="number">7&#x27;b</span>000_0100:begin beep&lt;=low[<span class="number">2</span>]; end  </span><br><span class="line"><span class="number">278.</span>	            <span class="number">7&#x27;b</span>000_1000:begin beep&lt;=low[<span class="number">3</span>]; end  </span><br><span class="line"><span class="number">279.</span>	            <span class="number">7&#x27;b</span>001_0000:begin beep&lt;=low[<span class="number">4</span>]; end  </span><br><span class="line"><span class="number">280.</span>	            <span class="number">7&#x27;b</span>010_0000:begin beep&lt;=low[<span class="number">5</span>]; end  </span><br><span class="line"><span class="number">281.</span>	            <span class="number">7&#x27;b</span>100_0000:begin beep&lt;=low[<span class="number">6</span>]; end  </span><br><span class="line"><span class="number">282.</span>	            endcase  </span><br><span class="line"><span class="number">283.</span>	            end  </span><br><span class="line"><span class="number">284.</span>	              </span><br><span class="line"><span class="number">285.</span>	    end  </span><br><span class="line"><span class="number">286.</span>	      </span><br><span class="line"><span class="number">287.</span>	      </span><br><span class="line"><span class="number">288.</span>	      </span><br><span class="line"><span class="number">289.</span>	      </span><br><span class="line"><span class="number">290.</span>	    <span class="comment">//显示点阵  </span></span><br><span class="line"><span class="number">291.</span>	    <span class="function">show_LED <span class="title">sL1</span><span class="params">(.clk(clk),  </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">292.</span>	                    .SW(pitch),  </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">293.</span>	                    .key(tone),  </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">294.</span>	                    .row(row),  </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">295.</span>	                    .col_r(col_r),   </span></span></span><br><span class="line"><span class="params"><span class="function"><span class="number">296.</span>	                    .col_g(col_g))</span></span>;  </span><br><span class="line"><span class="number">297.</span>	                      </span><br><span class="line"><span class="number">298.</span>	    <span class="comment">//数码管显示  </span></span><br><span class="line"><span class="number">299.</span>	    <span class="built_in">show_seg_tube</span>(.<span class="built_in">key</span>(tone),   </span><br><span class="line"><span class="number">300.</span>	                      .<span class="built_in">clk</span>(clk),   </span><br><span class="line"><span class="number">301.</span>	                      .<span class="built_in">seg</span>(seg));  </span><br><span class="line"><span class="number">302.</span>	endmodule  </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h1 id="4-仿真波形分析"><a href="#4-仿真波形分析" class="headerlink" title="4 仿真波形分析"></a>4 仿真波形分析</h1><h2 id="4-1-数码管显示模块"><a href="#4-1-数码管显示模块" class="headerlink" title="4.1 数码管显示模块"></a>4.1 数码管显示模块</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在该模块的仿真中，笔者通过改变不同时间对应的key值，模拟用户在使用简易电子琴演奏器时按下按键的行为。仿真波形图如图6所示。</p>
<div align=center>
<image src="https://img-blog.csdnimg.cn/2021013021570161.png"/>
</div>
<center><b>图 6 数码管显示模块的仿真波形图<b></center>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从图6中可以看出，随着用户按下按键的变化，数码管的输出信号产生了不同形式的变化。数码管的输出信号seg[0]至seg[7]分别对应了八段数码管的a，b，c，d，e，f，g七个显示段。与数码管的结构进行对照可以发现，key[0]至key[6]信号分别为高电平时，数码管上显示的数字为1,2,3,4,5,6,7。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在本实验中，数码管显示所需要的行信号在顶层模块中直接赋值以确保只有7号数码管正常工作，因此在该模块仿真中并未体现。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h2 id="4-2-分频模块"><a href="#4-2-分频模块" class="headerlink" title="4.2 分频模块"></a>4.2 分频模块</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在该模块的仿真中，笔者给予输入的信号clk 1MHZ的时钟信号，尝试改变分频系数对时钟信号进行仿真，期望得到原时钟四分之一的频率。仿真的波形图如图7所示。</p>
<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130215817184.png"/>
</div>
<center><b>图 7 分频模块的仿真波形图<b></center>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从图7可以明显的看出，分频后的时钟信号的周期是原时钟信号周期的四倍。由此可知，该分频模块可以得到所需要的分频效果。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h2 id="4-3-点阵扫描模块"><a href="#4-3-点阵扫描模块" class="headerlink" title="4.3 点阵扫描模块"></a>4.3 点阵扫描模块</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在该模块的仿真中，笔者分别改变输入的音调和按下按键的情况，得到仿真波形如图8所示。</p>
<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130215910900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 8 点阵扫描模块的仿真波形图<b></center>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由图8可以看出，该模块中，当SW[2]=1代表播放低音时，只有绿色点阵亮起。同时，当按下key[3]时，列信号中的col_g[3]置0，即对应列全灭。当SW[1]=1代表播放中音时，只有红色点阵亮起，同时，当按下key[4]时，对应列全灭。当SW[0]=1代表播放高音时，红色绿色点阵同时亮起，显示黄色，同时，当按下key[1]时，对应列全灭。由此可知，该模块可以实现预设中所要实现的效果。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h2 id="4-4-乐曲演奏模块"><a href="#4-4-乐曲演奏模块" class="headerlink" title="4.4 乐曲演奏模块"></a>4.4 乐曲演奏模块</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该模块的仿真中，笔者将分别对手动演奏和自动演奏进行仿真。由于音符和系统时钟的频率相差较大，因此手动演奏和自动演奏的部分笔者都将以不同分度值的两幅仿真图展示，分别展示输出到蜂鸣器的频率和点阵、数码管的显示。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;手动演奏的仿真波形图如图9和图10所示。自动演奏的仿真波形图如图11、图12和图13所示。由于演奏部分所需要仿真的时间更长，远大于Quartus II中自带的仿真上限时间100us，故笔者在此编写testbench文件并使用ModelSim软件进行Gate Level Simulation操作。<br>由图9可以看出，当BTN[5]置为1，其他BTN置为0，SW为3’b100时，蜂鸣器输出信号beep变为低音6所对应的频率。同时，由图10可以知道，此时点阵列只出现绿色，且col_g[5]所表示的第6列不亮，数码管显示数字6。由此可知，该模块手动演奏部分可以正常实现所需要的功能。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由图11可以看出，在自动演奏信号auto_sw为1时，随着时间的推移每0.25秒会产生一次点阵列和数码管的变换，音符演奏所引起的行阵列和数码管的持续时间和切换效果符合预期设计。由图12可以看出，在切换音符时输出到蜂鸣器的信号频率也会相应改变，音符的切换效果符合预期设计。由图13可以看出，在自动演奏播放不同音符时，行阵列和数码管显示的效果（即点阵列上音符对应列全灭，数码管上显示音符数字）符合预期设计。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;至此，仿真结果表示该模块设计完全符合预期效果。</p>
<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130220028650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 9 手动演奏的仿真波形图（蜂鸣器部分）<b></center>

<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130220050789.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 10 手动演奏的仿真波形图（数码管、点阵列部分）<b></center>

<div align=center>
<image src="https://img-blog.csdnimg.cn/2021013022011810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 11 自动演奏的仿真波形图（总体画面）<b></center>

<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130220142442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 12 自动演奏的波形仿真图（两音符交界处-蜂鸣器）<b></center>

<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130220210136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 13 自动演奏的波形仿真图（两音符交界处-行列信号）<b></center>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h1 id="5-功能说明及资源利用情况"><a href="#5-功能说明及资源利用情况" class="headerlink" title="5 功能说明及资源利用情况"></a>5 功能说明及资源利用情况</h1><h2 id="5-1-基本功能"><a href="#5-1-基本功能" class="headerlink" title="5.1 基本功能"></a>5.1 基本功能</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.用 8×8 点阵显示“1 2 3 4 5 6 7”七个音符构成的电子琴键盘。其中点阵的第一列用一个 LED 点亮表示音符“1”，第二列用二个 LED 点亮表示音符“2”，依此类推。当音符为低音 1<del>7 时，点阵显示为绿色；当音符为中音 1</del>7 时，点阵显示为红色；当音符为高音 1~7 时，点阵显示为黄色；<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.用 BTN7～BTN1 七个按键模拟电子琴手动演奏时的“1 2 3 4 5 6 7”七个音符。当某个按键按下时，数码管 DISP7 显示相应的音符，点阵上与之对应的音符显示列全灭，同时蜂鸣器演奏相应的声音；当按键放开时数码管显示的音符灭掉，点阵显示恢复，蜂鸣器停止声音的输出。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.由拨码开关SW7,SW6,SW5切换选择高、中、低音，点阵颜色进行相应变化。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.可通过一个拨码开关进行手动/自动演奏的切换，自动演奏时，点阵根据乐曲进行颜 色和亮灭的变化。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h2 id="5-2-资源利用情况"><a href="#5-2-资源利用情况" class="headerlink" title="5.2 资源利用情况"></a>5.2 资源利用情况</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本次实验共使用了1150个逻辑单元，占电路板总逻辑单元数的91%；共使用了53个管脚，占电路板总管脚数的46%，如图14所示。</p>
<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130220413471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 14 逻辑单元及管脚使用情况<b></center>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;管脚分配情况如图15和图16所示。</p>
<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130220504777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 15 MAX II EPM1270T144C5管脚分配图<b></center>

<div align=center>
<image src="https://img-blog.csdnimg.cn/20210130220530555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTgxNzMwOQ==,size_16,color_FFFFFF,t_70"/>
</div>
<center><b>图 16 管脚分配图<b></center>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h1 id="6-故障问题及分析"><a href="#6-故障问题及分析" class="headerlink" title="6 故障问题及分析"></a>6 故障问题及分析</h1><h2 id="6-1-按键消抖后无法实现功能"><a href="#6-1-按键消抖后无法实现功能" class="headerlink" title="6.1 按键消抖后无法实现功能"></a>6.1 按键消抖后无法实现功能</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故障描述：调用按键消抖后蜂鸣器只产生“噗”的一声，而无法正常发出音调。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;问题分析：经过分析按键消抖的方式和蜂鸣器发声的条件，发现按键消抖主要是靠产生的脉冲信号实现功能，而电子琴发声需要按键产生持续的高电平。同时，在该情况下按键不消抖并不会影响到电子琴功能的输出和用户的体验，因此取消按键消抖模块，该问题得以解决。</p>
<h2 id="6-2-仿真时蜂鸣器信号无波形"><a href="#6-2-仿真时蜂鸣器信号无波形" class="headerlink" title="6.2 仿真时蜂鸣器信号无波形"></a>6.2 仿真时蜂鸣器信号无波形</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故障描述：在使用Quartus自带仿真时，点击运行仿真，蜂鸣器信号保持为一条直线。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;问题分析：Quartus自带的仿真时间上限为100us，而需要输出的信号频率导致了其需要更长的时间才能展现出来，因此编写testbench文件，调用ModelSim软件进行仿真，问题得以解决。</p>
<h2 id="6-3-对自动播放进行仿真时没有波形变化"><a href="#6-3-对自动播放进行仿真时没有波形变化" class="headerlink" title="6.3 对自动播放进行仿真时没有波形变化"></a>6.3 对自动播放进行仿真时没有波形变化</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故障描述：使用Quartus自带仿真对自动播放功能进行仿真时，无法显示自动播放所产生的各种波形变换。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;问题分析：Quartus自带的仿真时间上限为100us，而一个四分音符播放所需要的时间至少为0.25秒，远远大于Quartus自带的仿真时间上限，因此通过编写testbench文件，调用ModelSim软件进行仿真，问题得以解决。</p>
<h2 id="6-4-仿真成功但板子上没有现象"><a href="#6-4-仿真成功但板子上没有现象" class="headerlink" title="6.4 仿真成功但板子上没有现象"></a>6.4 仿真成功但板子上没有现象</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故障描述：烧录成功后发现蜂鸣器发声错误，点阵数码管亮得十分混乱。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;问题分析：电路实验板上的电路拨码开关设置的状态不正确，时钟信号不是1MHz。通过调整拨码开关，将第2位和第4位调至高电平，时钟信号变为1MHz，蜂鸣器正常发声，点阵和数码管正常显示。</p>
<h2 id="6-5-按键消抖后无法实现功能"><a href="#6-5-按键消抖后无法实现功能" class="headerlink" title="6.5 按键消抖后无法实现功能"></a>6.5 按键消抖后无法实现功能</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故障描述：调用按键消抖后蜂鸣器只产生“噗”的一声，而无法正常发出音调。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;问题分析：经过分析按键消抖的方式和蜂鸣器发声的条件，发现按键消抖主要是靠产生的脉冲信号实现功能，而电子琴发声需要按键产生持续的高电平。同时，在该情况下按键不消抖并不会影响到电子琴功能的输出和用户的体验，因此取消按键消抖模块，该问题得以解决。</p>
<h2 id="6-6-数码管和LED点亮形式不正确"><a href="#6-6-数码管和LED点亮形式不正确" class="headerlink" title="6.6 数码管和LED点亮形式不正确"></a>6.6 数码管和LED点亮形式不正确</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故障描述：左边两个数码管始终亮，且LED半边不亮。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;问题分析：当拨码开关SW10的第3位和第4位拨到下边时，数码管DS6和DS7的位码 控制端CAT6和CAT7不受EPM1270T144C5芯片的引脚控制。因而需要把使能控制SW10的最右两位拨码成’11’，即可正常显示。</p>
<h2 id="6-7-点阵列反向显示"><a href="#6-7-点阵列反向显示" class="headerlink" title="6.7 点阵列反向显示"></a>6.7 点阵列反向显示</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故障描述：点阵列显示的图案和预计的图案发生了反转。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;问题分析：经过查对，发现可编程实验板上点阵列的序号是从下往下、从左往右递增的，和笔者预设的高低位值相反，导致了图案发生反转。经过更改管脚使点阵正确显示。</p>
<h2 id="6-8-程序烧录后有的按键有反应有的按键无反应"><a href="#6-8-程序烧录后有的按键有反应有的按键无反应" class="headerlink" title="6.8 程序烧录后有的按键有反应有的按键无反应"></a>6.8 程序烧录后有的按键有反应有的按键无反应</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;故障描述：将仿真通过的程序烧录到可编程实验板后，一些按键按下后有正常效果出现，而一些按键按下后没有反应。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;问题分析：由于部分按键按下后有正常效果，更换可编程实验板后也有正常效果，因此排除程序上的问题。将可编程实验板没有反应的按键的引脚对应引脚接入示波器，按下按键后发现没有波形。再将正常功能按键的引脚接入示波器后，按下按键后可以检测到高电平，因此排除了程序上的故障，问题应是由于按键损坏等原因所引起的。</p>
]]></content>
      <categories>
        <category>项目</category>
        <category>Verilog</category>
      </categories>
      <tags>
        <tag>Verilog</tag>
      </tags>
  </entry>
</search>
